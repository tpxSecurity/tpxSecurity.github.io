[ { "title": "Legales", "url": "/posts/Legales/", "categories": "Seguridad", "tags": "Seguridad", "date": "2022-02-17 10:00:00 -0600", "snippet": "El uso de la información brindada en esta plataforma es meramente eduaciónal, no nos hacemos responsable del uso que se le pueda dar." }, { "title": "Pentesting Web - Cheat Sheet", "url": "/posts/Pentesting-Web/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-30 18:00:00 -0600", "snippet": "Esta publicación es una guía orientada a los entusiastas y profesionales en el área de Web Pentesting o Auditorías Web. Brindando a nuestros visitantes una ruta de aprendizaje y uso de herramientas recopiladas a lo largo de nuestra experiencia. 1.- Introducción / Datos legales 2.- Fundamentos 2.1.- Funcionamiento de las redes 2.1.1.- Funcionamiento de la Red /modelo OSI. 2.1.2.- ¿Qué es un servicio?. 2.1.3.- ¿Qué es un protocolo? 2.1.4.- ¿Cómo viaja tu información por Internet? 2.2.- Sistemas Operativos y distribuciónes. 2.2.1.- Sistemas Operativos orientados a pruebas de seguridad. 2.2.2.- Comandos Básicos de Linux / Shell Scripting. 3.- Introducción la seguridad 3.1.- ¿Qué es la seguridad informática? 3.2.- Seguridad informática vs Seguridad de la información. 3.3.- Tipos de Analistas. 4.- Introducción a las pruebas de seguridad. 4.1.- Metodologías y estándares de pruebas de seguridad. 4.2.- Fases de una prueba de seguridad. 4.3.- Caja blanca, Caja negra y Caja gris. 5.- Conociendo al atacante 5.1.- Formas de actuar de un atacante. 5.2.- Pensamiento vertical y horizontal. 5.3.- Vectores de ataque comunes 5.4.- Ataques por capa OSI 6.- Métricas CVE y CWE 6.1.- Common Vulnerabilities and Exposures 6.2.- Common Weakness Enumeration 7.- Auditoría orientada a entornos Web 7.1.- Estándares de desarrollo y sus características 7.1.1.- API REST 7.1.2.- SOAP 7.2.- Explorando los diferentes tipos de servidores y tecnologías. 7.3.- Alcance y proceso de una auditoría Web. 7.4.- Metodologías de seguridad orientadas hacia aplicaciones Web 7.5.- Fases de una auditoría Web 7.5.1.- Reconocimiento Aplicaciones Web 7.5.1.1.- Análisis de subdominios 7.5.1.1.1.- Pasivo 7.5.1.1.2.- Certificados SSL 7.5.1.1.3.- Dns resolution 7.5.1.1.4.- Bruteforce 7.5.1.1.5.- Permutación 7.5.1.1.6.- Recursión 7.5.1.1.7.- Registros dns 7.5.1.1.8.- Análisis de código fuente y Js scraping 7.5.1.1.9.- Técnicas de obtención de ip 7.5.1.2.- Técnicas Web 7.5.1.2.1.- Waf detection 7.5.1.2.2.- Web vuln scan 7.5.1.2.3.- Fuzzing 7.5.1.2.4.- CMS scan 7.5.1.2.5.- Directory enumeración 7.5.1.2.6.- Crawler 7.5.1.2.7.- Js análisis 7.5.1.2.8.- Cors check 7.5.1.2.9.- Check robots wayback 7.5.1.3.- Osint 7.5.1.3.1- Domain info(whois,resistant) 7.5.1.3.2- Metadata 7.5.1.3.3- Emails, users, data leaks 7.5.1.3.4- Google dorks 7.5.1.3.5- Gihub dorks 7.5.2- Explotación Aplicaciones Web 7.5.2.1- SQL Injection 7.5.2.2- Autenticacion 7.5.2.3- Divulgación de información 7.5.2.4- Broken Access Control 7.5.2.5- IDOR 7.5.2.6- Directory Traversal 7.5.2.7- Server-side request Forgery (SSRF) 7.5.2.8- XXE Injection 7.5.2.9- Remote Code Execution 7.5.2.10- BUSINESS LOGIC 7.5.2.11 CSRF Cross Site Request For forgery 7.5.2.12 WebSockets 7.5.2.13- Cross Site Scripting 7.5.2.14- DOM (Document Object Model) 7.5.2.15- Click jacking 7.5.2.16- CORS 7.5.2.17- O-Auth 7.5.2.18- Insecure Deserealization 7.5.2.19- HTTP Request Smuggling 7.5.2.20- Web Cache Poisoning 7.5.2.21- Server Side Template Injection 7.5.2.22- Web Cache Poisoning 7.5.2.23- Attacking GraphQL 7.5.3- Post Explotación Aplicaciones Web 8.- Mantener el anonimato y reducir tiempos 9.- Creación de reporte 9.1- Tipos de reporte 9.2- Manejo de evidencias 9.3- El uso del happy path " }, { "title": "2.- Fundamentos", "url": "/posts/WPT-Fundamentos/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-29 18:00:00 -0600", "snippet": "Antes de profundizar en temas dentro del mundo de la Ciberseguridad es necesario hacer mención las especialidades existentes: Seguridad en la red e infraestructura Seguridad en aplicaciónes Web Seguridad en aplicaciones Android Análisis Forence Detección y RespuestaDentro de los temas menciónados anteriormente nos enfocaremos especificamente en Seguridad en aplicaciónes Web.Los conocimientos base para ser un auditor de aplicaciones web pueden llegar a ser bastante amplios, con base a la existencia de múltiples lenguajes de programación: Backend y Frontend, de igual forma el reconocer las configuraciones posibles o necesarias para el correcto funcionamiento del servicio web.2.1.- Funcionamiento de las redesEl primer conocimiento base de un auditor Web o pentester Web se basa en el entendimiento de las redes y como viaja la información a travéz de la red. Los conocimientos de ello brinda al pentester un panorama más amplio de ataque, mejorando la efectividad dentro de las pruebas a realizar.2.1.1.- Funcionamiento de la Red/Modelo OSILa meta en el estandar modelo OSI fue crear un modelo de referencia que permitiera la comunicación entre diversos dispositivos, tecnologias y brindar compatibilidad. Estas capas representan las fases en el establecimiento de cada conexión pensando en como los paquetes seran enviados, el estandar fue creado para rastrear como la conexión fue estructurada y brindarnos visibilidad. Capa 1: Física Si alguna vez ha tenido que solucionar problemas electrónicos, la capa 1 es donde respondería la pregunta “¿Está enchufado?”. La capa 1 también incluye diseños de pines, voltajes, enlaces de radiofrecuencia y otros requisitos físicos. Capa 2: Enlace de datos La capa de enlace de datos es la responsable de del intercambio de datos entre un host cualquiera, y la red a la que está conectado. Permitiendo una correcta comunicación entre las capas superiores (Red, Transporte y Aplicación) y el medio físico de transporte de datos. Su principal objetivo es la de proveer una comunicación segura entre dos nodos pertenecientes a una misma red o subred, para ello se encarga de la notificación de errores, de la topología de la red y el control del flujo en la transmisión de las tramas. Capa 3: Red La capa 3, alberga direcciones IP y enrutadores que buscan las vías de comunicación más eficientes para los paquetes que contienen información de control y datos de usuario, también conocida como carga útil. Capa 4: Trasporte La capa 4 es una capa de host que generalmente funciona como una oficina postal digital que coordina las transferencias de datos entre sistemas y hosts, incluida la cantidad de datos que se envían, la tasa de transmisión de datos, los destinos de datos y más. Capa 5: Sesión La capa 5 es una capa de host que actúa como un moderador en el sentido de que controla el diálogo entre computadoras, dispositivos o servidores. Establece rutas, límites para el tiempo de espera de respuesta y finaliza sesiones. Capa 6: Presentación Esta capa de host es donde los datos se traducen y formatean para que las aplicaciones, las redes y los dispositivos puedan comprender lo que reciben. Los caracteres se codifican y los datos se comprimen, cifran y descifran en la capa 6. Capa 7: Aplicación Esta capa de host superior es familiar para los usuarios finales porque es el hogar de las interfaces de programación de aplicaciones (API) que permiten compartir recursos, acceder a archivos remotos y más. Es donde encontrará navegadores web y aplicaciones como clientes de correo electrónico y sitios de redes sociales. 2.1.2.- ¿Qué es un servicio?Los servicios son aplicaciónes o funciónes las cuales nos permiten realizar determinadas tareas dentro de la red mediante el uso de protocolos. Estos suelen brindar desde el envío de un correo o visualización de una página web hasta la administración remota de un equipo. Mostraremos algunos de muchos de los serviciós más comunes usados en el día a día dentro de la red.Correo electrónico (e-mail). Utiliza el protocolo SMTP (“Simple Mail Transfer Protocol”), para la recepción y envío.Emulación de terminal TELNET. Se utiliza para conectar a equipos remotos mediante la Red emulando una terminal del equipo al que se realiza la conexión.Transferencias de ficheros: Utiliza el protocolo FTP (“File Transfer Protocol”), se usa para enviar o recibir ficheros (de cualquier tipo) entre dos equipos conectados a la red.Servicio de nombres de dominio DNS (“Domain Name Service”). En realidad es un servicio que raramente se utiliza solo; es usado por otros, como TELNET, FTP, WWW, etc. para conseguir las direcciones IP (numéricas) de las máquinas remotas a partir de los nombres de dominio.Gopher. Un servicio de información basado en servidores y que sirve de interfaz para otros servicios de información.WAIS (“Wide Area Information Service”). Como su nombre indica, se trata de otro servicio de información basado en bases de datos de ficheros que permiten su rápida localización.finger. Un servicio de identificación de usuarios.La Web, WWW, W3. Un servicio basado en HTTP (Hyper Text Transfer Protocol), el último y más popular que está fagocitando a muchos de los anteriores.Sistema de ficheros de red NFS (“Network File System”). Un sistema que permite a equipos físicamente distantes, compartir discos y directorios mediante la técnica denominada RPC (“Remote Procedure Call”), que hace que tales recursos aparezcan como si estuvieran en el propio sistema.Servicios de Información de Red, NIS (“Network Information Services”). También basados en RPC, permite que varios sistemas puedan compartir una misma base de datos situada en remoto; por ejemplo, varios sistemas pueden compartir bases de datos con el mismo fichero de seguridad (password file), lo que facilita su gestión centralizada.Servicios “R”. Tales como rlogin, rsh y otros. Utilizan la idea de acuerdos entre sistemas (hosts trusting), que permite ejecutar comandos y otras órdenes en equipos remotos sin requerir un password.2.1.3.- ¿Qué es un protocolo?Los protocolos son una serie de estándares y politcas formales, conformados por procedimientos, restricciones y formatos que permiten el intecambo de paquetes dentro de una red.Protocolos de la capa 1 - Capa física USB: Universal Serial Bus Ethernet: Ethernet physical layer DSL: Digital subscriber line Etherloop: Combinación de Ethernet and DSL Infrared: Infrared radiation Frame Relay SDH: Jerarquía digital síncrona SONET: Red óptica sincronizadaProtocolos de la capa 2 - Enlace de datos DCAP: Protocolo de acceso del cliente de la conmutación de la transmisión de datos FDDI: Interfaz de distribución de datos en fibra HDLC: Control de enlace de datos de alto nivel LAPD: Protocolo de acceso de enlace para los canales PPP: Protocolo punto a punto STP (Spanning Tree Protocol): protocolo del árbol esparcido VTP VLAN: trunking virtual protocol para LAN virtual MPLS: Conmutación multiprotocolo de la etiquetaProtocolos de la capa 3 - Red ARP: Protocolo de resolución de direcciones BGP: Protocolo de frontera de entrada ICMP: Protocolo de mensaje de control de Internet IPv4: Protocolo de internet versión 4 IPv6: Protocolo de internet versión 6 IPX: Red interna del intercambio del paquete OSPF: Abrir la trayectoria más corta primero RARP: Protocolo de resolución de direcciones inversoProtocolos de la capa 4 - Transporte IL: Convertido originalmente como capa de transporte para 9P SPX: Intercambio ordenado del paquete SCTP: Protocolo de la transmisión del control de la corriente TCP: Protocolo del control de la transmisión UDP: Protocolo de datagramas de usuario iSCSI: Interfaz de sistema de computadora pequeña de Internet iSCSI DCCP: Protocolo de control de congestión de datagramasProtocolos de la capa 5 - Sesión NFS: Red de sistema de archivos SMB: Bloque del mensaje del servidor RPC: Llamada a procedimiento remoto SDP: Protocolo directo de sockets SMB: Bloque de mensajes del servidor SMPP: Mensaje corto punto a puntoProtocolos de la capa 6- Presentación TLS: Seguridad de la capa de transporte SSL: Capa de conexión segura XDR: Extenal data representation MIME: Multipurpose Internet Mail ExtensionsProtocolos de la capa 7 - Aplicación DHCP: Protocolo de configuración dinámica de host DNS: Domain Name System HTTP: Protocolo de transferencia de hipertexto HTTPS: Protocolo de transferencia de hipertexto seguro POP3: Protocolo de oficina de correo SMTP: Protocolo de transferencia simple de correo Telnet: Protocolo de telecomunicaciones de red2.1.4.- ¿Cómo viaja tu información por Internet?Internet es un lugar vasto y en constante cambio, con contenido nuevo que se carga cada minuto. La información que se sube a Internet se puede compartir con millones de personas en cuestión de segundos. Internet se ha convertido en una poderosa herramienta para la comunicación y el intercambio de información, pero ¿cómo funciona?Internet funciona mediante el uso de servidores para almacenar datos y luego conectarlos a través de redes. Estos servidores están conectados entre sí a través de redes para formar lo que se conoce como la World Wide Web. Para acceder a esta información, necesita un proveedor de servicios de Internet (ISP). Cuando ingresa la URL de un sitio web en su navegador, se conectará a un ISP que transmitirá su solicitud y eventualmente lo conectará al servidor que almacena los datos del sitio web.2.2.- Sistemas operativos y distribucionesServicios comunes para las aplicaciones.Hay muchos sistemas operativos diferentes en uso hoy en día. Los más populares son Microsoft Windows, Apple Mac OS y Linux.Sistemas operativos más comunes en el mundo de internet: Microsoft Windows Server Core 2008 - 2021 Servidores Linux/Unix Ubuntu Debian Centos Redhat Solaris Os macOS Server2.2.1.- Sistemas Operativos orientados a pruebas de seguridadUno de los más grandes mitos dentro del mundo de la ciberseguridad es “para hackerar se necesita usar Kali Linux” esto se da gracias a la enorme comunidad y la divulgación en redes sociales. Si bien es cierto que la mayoria de los hackers éticos y pentesters hacen uso de el, a si como de otras distribuciónes. Realmente el uso es por la integración previa de herramientas, sin embargo el sistema raiz a utilizar es linux esto dadas las características que este tiene, las cuales permiten tener un gran control del hardware.Sistemas Operativos dirigidos a pentesting recomendados: Kali Linux Parrot Os Black Arch BlackBox Caine Ninjutsu OS (Windows)2.2.2.- Comandos Básicos de Linux / Shell ScriptingEl bash scripting es la habilidad más utilizada por los pentesters, ya que dentro de las auditorías el uso de la automatización suele ser crucial para disminuir en tiempo de análisis.#!/usr/bin/env bash#La primera linea hace referencia al shebang de linux que dice que sistema ejecutará# Ejemplos de shelbang: http://en.wikipedia.org/wiki/Shebang_(Unix)#Una vez configurado esto todo lo que empice con “#” es un comentario&amp;lt;# Ejemplo simple de un Hola Mundo!:echo Hello world! # =&amp;gt; Hello world!# Los comandos se ejecutan uno después de otro al existir un ;echo &#39;Primer linea&#39;; echo &#39;Segunda Linea&#39;# =&amp;gt; Primera Línea# =&amp;gt; Segunda Línea#Como Declarar variables:Variable=&quot;una cadena&quot;# La sintaxis importa:Variable = &quot;Some string&quot; # =&amp;gt; regresa un error &quot;Variable: command not found&quot;# Bash al detectar un espacio entre el nombre y el “=” lo detecta como comando# este al no existir regresa error# Igual de la siguiente manera:Variable= &#39;Cadena’ # =&amp;gt; returns error: &quot;Some string: command not found&quot;# Bash puede decidir que ‘Cadena’ es un comando interno y genera el error# por no reconocerlo. (en este caso &#39;Variable=&#39; está bien ejecutado pero el uso de # comilla simple rompe el comando).#Uso de variables:echo $Variable # =&amp;gt; Some stringecho &quot;$Variable&quot; # =&amp;gt; Some stringecho &#39;$Variable&#39; # =&amp;gt; $Variable# Si se quiere hacer uso de las variables se tiene que hacer uso del símbolo $# de lo contrario no lo reconoce y el uso de &#39; hace que las variables no sean reconocidas# Expansión de parámetros ${ }:echo ${Variable} # =&amp;gt; Some string#Este es un simple uso de la expansión de parámetros#El parámetro de expansión obtiene el valor de una variable.# Esto “expande” o imprime el valor de la variable#Durante la expansión del tiempo del valor puede ser modificado# Bajo de estos modificadores se pueden añadir más parámetros de expansión# Sustitución de cadenas en variablesecho ${Variable/Some/A} # =&amp;gt; A string# Esto intercambia el valor &quot;Some&quot; al valor &quot;A&quot;# Substraer una cadena de una variableLength=7echo ${Variable:0:Length} # =&amp;gt; Some st# Regresa solo los primeros 7 caracteres del valorecho ${Variable: -5} # =&amp;gt; tring# regresa los 5 últimos caracteres#Medir cadenaecho ${#Variable} # =&amp;gt; 11# Expansión indirectaOtherVariable=&quot;Variable&quot;echo ${!OtherVariable} # =&amp;gt; Some String# Eso puede expandir el valor de otra variable# Valor por defecto de la variableecho ${Foo:-&quot;DefaultValueIfFooIsMissingOrEmpty&quot;}# =&amp;gt; DefaultValueIfFooIsMissingOrEmpty# Esto funciona para nool (Foo=) y para una cadena vacía(Foo=&quot;&quot;); caso de 0 (Foo=0) regresa 0.# Nota: Esto solo cambia el valor por defecto de una variable, pero no cambia el valor de esta# Declaración de array con n elementosarray0=(one two three four five six)# Imprimir primer elementoecho $array0 # =&amp;gt; &quot;one&quot;#Segunda formaecho ${array0[0]} # =&amp;gt; &quot;one&quot;# Imprimir todos los elementosecho ${array0[@]} # =&amp;gt; &quot;one two three four five six&quot;# Imprime el número de elementosecho ${#array0[@]} # =&amp;gt; &quot;6&quot;# Imprime el número de caracteres en el tercer elementoecho ${#array0[2]} # =&amp;gt; &quot;5&quot;#Imprime dos elementos desde la 4ta posiciónecho ${array0[@]:3:2} # =&amp;gt; &quot;four five&quot;#Imprime todos los elementos realizando un salto de línea en cada unofor i in &quot;${array0[@]}&quot;; do echo &quot;$i&quot;done# Brace Expansion { }# Utilizado para genera cadenas arbitrariasecho {1..10} # =&amp;gt; 1 2 3 4 5 6 7 8 9 10echo {a..z} # =&amp;gt; a b c d e f g h i j k l m n o p q r s t u v w x y z# Esto imprime desde el rango inicial hasta el rango final#Variables Built-in:# Estas son algunas variables de entorno utilizadas frecuentementeecho &quot;Last program&#39;s return value: $?&quot;echo &quot;Script&#39;s PID: $$&quot;echo &quot;Number of arguments passed to script: $#&quot;echo &quot;All arguments passed to script: $@&quot;echo &quot;Script&#39;s arguments separated into different variables: $1 $2...&quot;#Ahora que sabes el uso básico de variables e imprecion ,#vamos a aprender algunos comandos básicos en bash!# El comando para saber el directorio en el cual estamos :`pwd`.# `pwd` imprime el directorio en el cual estamos trabajando.#Podemos invocarlo con la siguiente variable built-in `$PWD`.#Un ejemplo de los comandos:echo &quot;I&#39;m in $(pwd)&quot; # Ejecuta `pwd` y lo concatena a la salidaecho &quot;I&#39;m in $PWD&quot; # Concatena directamente el valor de PWD#Si tu terminal está llena de basura# el comando `clear` limpia la pantalla# Ctrl-L también funciona para limpiar pantalla#Leyendo valores de entrada:echo &quot;What&#39;s your name?&quot;read Name # Note: No es necesario declarar la variable!echo Hello, $Name!# Nosotros tenemos la siguiente estructura de if basica:# Usa el comando “man &amp;lt;test comand&amp;gt;” para ver información de sintaxisif [ $Name != $USER ]then echo &quot;Your name isn&#39;t your username&quot;else echo &quot;Your name is your username&quot;fi# Es verdadero si en nombre del usuario no es el mismo al de el usuario logeado# Nota: Si $Name está vacío pensaríamos validar de esta forma :if [ != $USER ]#Esto es una sintaxis errónea#La manera correcta para validar variables vacías dentro de bash:if [ &quot;$Name&quot; != $USER ] ...# Otra manera de aplicarlo:if [ &quot;&quot; != $USER ] ...# Ejecuciones condicionalesecho &quot;Always executed&quot; || echo &quot;Only executed if first command fails&quot;# =&amp;gt; Always executedecho &quot;Always executed&quot; &amp;amp;&amp;amp; echo &quot;Only executed if first command does NOT fail&quot;# =&amp;gt; Always executed# =&amp;gt; Only executed if first command does NOT fail# Para usar &amp;amp;&amp;amp; y || dentro de estamentos condicionales tenemos que separa con square brackets:if [ &quot;$Name&quot; == &quot;Steve&quot; ] &amp;amp;&amp;amp; [ &quot;$Age&quot; -eq 15 ]then echo &quot;This will run if $Name is Steve AND $Age is 15.&quot;fiif [ &quot;$Name&quot; == &quot;Daniya&quot; ] || [ &quot;$Name&quot; == &quot;Zach&quot; ]then echo &quot;This will run if $Name is Daniya OR Zach.&quot;fi#También se puede usar el operador `=~` para testear una cadena con el parámetro Regex:Email=me@example.comif [[ &quot;$Email&quot; =~ [a-z]+@[a-z]{2,}\\.(com|net|org) ]]then echo &quot;Valid email!&quot;fi# Nota: El operador =~ Solo funciona dentro de [[ ]] square brackets,#Cada una tiene sutilmente diferencias [ ].# Ingresa a http://www.gnu.org/software/bash/manual/bashref.html#Conditional-Constructs para saber mas del tema.#Redefinir comandos con alias `ping` solo envia 5 paquetes.alias ping=&#39;ping -c 5&#39;# Se puede escapar del comando alias usando el símbolo\\\\ping 192.168.1.1# Imprime todos los aliasalias -p#Dentro de bash puedes enumerar los directorios dentro de tu espacio de trabajo.ls # Lista todos los directorios que contiene el directorio actual# Este comando tiene parámetros de control:ls -l # Imprime todos los archivos en forma de listals -t # Ordena los archivos por última vez de modificaciónls -R # Muestra de manera recursiva todos los directorios#Los resultados previos de estos comandos pueden ser pasados al siguiente comando# grep es un comando que nos permite leer un texto e identificar patrones de texto# Esto nos muestra una lista de todos los archivos con extensión txtls -l | grep &quot;\\.txt&quot;# Usa `cat`para imprimir el contenido de los archivos:cat file.txtContents=$(cat file.txt)# &quot;\\n&quot; imprime un nuevo salto de línea# Usa `cp` para copiar documentos o directorios de un lugar a otro# `cp` cp crea copias a partir de la original,# la copia no afecta al original# Nota:si se nombra igual puede sobre escribir al originalcp srcFile.txt clone.txtcp -r srcDirectory/ dst/ # recursively copy# Usa el comando `mv` para mover archivos de un lugar a otro# `mv` es similar `cp`, pero elimina el archivo orien# `mv` es muy util para renombrar archivosmv s0urc3.txt dst.txt # sorry, l33t hackers...#Para navegar un poco sobre nuestra carpeta:cd ~ # Mover al directorio homecd # también nos lleva a homecd .. # subir un directorio# (^^say, from /home/username/Downloads to /home/username)cd /home/username/Documents # cambiar a una dirección específica cd - #Regresar al último directorio# =&amp;gt; /home/username/Documents# Uso de subshells para trabajar entre directorios (echo &quot;First, I&#39;m here: $PWD&quot;) &amp;amp;&amp;amp; (cd someDir; echo &quot;Then, I&#39;m here: $PWD&quot;)pwd # still in first directory# Usa `mkdir` para crear nuevos directoriosmkdir myNewDir# Escritura en archivosecho “Hello world” &amp;gt; output.out #Abre el archivo y sobre escribeecho “Hello world” &amp;gt;&amp;gt; output.out #Abre el archivo y concatena# Los ciclos for tienen muchas interpretaciones# se pueden generar automáticamente.for Variable in {1..3}do echo &quot;$Variable&quot;done# =&amp;gt; 1# =&amp;gt; 2# =&amp;gt; 3# O de la forma tradicionalfor ((a=1; a &amp;lt;= 3; a++))do echo $adone# =&amp;gt; 1# =&amp;gt; 2# =&amp;gt; 3# Esto tambien sirve con archivos, los lee y guarda en $Variablefor Variable in file1 file2do cat &quot;$Variable&quot;done#Creando algunas funcionesfunction foo (){ echo &quot;Arguments work just like script arguments: $@&quot; echo &quot;And: $1 $2...&quot; echo &quot;This is a function&quot; return 0}# llamando la función `foo` con dos argumentos arg1,arg2:foo arg1 arg2# =&amp;gt; Arguments work just like script arguments: arg1 arg2# =&amp;gt; And: arg1 arg2...# =&amp;gt; This is a function# Imprimir n cantidad de líneas de abajo para arribatail -n 10 file.txt#Imprimir n cantidad de líneas de arriba para abajohead -n 10 file.txt# `sudo` el comando para tener permisos de super usuarioNAME1=$(whoami)NAME2=$(sudo whoami)echo &quot;Was $NAME1, then became more powerful $NAME2" }, { "title": "3.- Introducción la seguridad", "url": "/posts/WPT-Introduccion-la-seguridad/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-28 18:00:00 -0600", "snippet": "La seguridad informática se ha convertido en uno de los mayores problemas desde sus inicios, y mucho después de la globalización de Internet. Teniendo en cuenta el potencial de las herramientas y aplicaciones que se encuentran en el, cada vez más personas y empresas sienten la necesidad de conectarse con el mundo digital.3.1.- ¿Qué es la seguridad informática?Es el proceso de eludir y verificar el uso no autorizado de sistemas informáticos,con el fin de proteger la confidencialidad e integridad de la información almacenada.este desea evitar que un atacante use o fuerce el acceso a los recursos de los sistemas con fines maliciosos o para generar ingresos.La seguridad informática incluye medidas de seguridad, como antivirus, firewalls y otras medidas definidas por el usuario, como proteger o deshabilitar ciertas características del software.3.2.- Seguridad informática vs Seguridad de la informaciónLa seguridad de la información es una disciplina que nos habla de riesgos, amenazas, análisis de escenarios, mejores prácticas y esquemas regulatorios, lo que nos obliga a garantizar un nivel de seguridad de procesos y tecnologías para aumentar la confiaza en la creación, utilización, almacenaje, transmisión, recuperación y disposición final de la información.la seguridad de la informacion es la disciplina encargada de garantizar la confidencialidad, integridad y disponibilidad de la información. Para lograr este objetivo se apoya en la seguridad informática, lo que significa que a pesar de la diversidad de disciplinas, una no puede prescindir de la otra. Para garantizar la información es necesario cumplir con las normas y establecer lineamientos que se deben seguir en la protección de la información.3.3.- Tipos de analistasPentester:su objetivo es la empresa en general.S e realizan en el software que está listo e implementado en el entorno de producción. En algunos casos las pruebas de penetración se realizan en un entorno de prueba, pero en todos los casos al terminar con la codificación y completar el desarrollo de la aplicación. se comienzan las pruebas de penetración. Puede detectar problemas con el código de la aplicación, errores de red y debilidades del sistema operativoAppSec:su objetivo es la busqueda de en el código fuente.consisten en encontrar vulnerabilidades en la capa de la aplicación, no en el sistema operativo ni en la red. Por lo general este se lleva a cabo durante la etapa de desarrollo. Para que los aprendizajes de esta etapa se puedan incorporar en el software para que este sea seguro y protegido.Bug Bounty:Las compañías publican programas de recompensa, más conocidos como Bug Bounty, a través de plataformas.A través de estas plataformas, las empresas interesadas en auditar sus servicios pueden contactar con hackers éticos de todo el mundo que quieran probar la seguridad de sus servicios. Cualquiera, puede inscribirse y participar en estos programas de recompensas por errores. Cuando una empresa abre un programa, explica su alcance y suele fijar precios diferentes para quien encuentra el error, en función de su gravedad." }, { "title": "4.- Introducción a las pruebas de seguridad", "url": "/posts/WPT-Introduccion-a-las-pruebas-de-seguridad/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-27 18:00:00 -0600", "snippet": "4.1.- Metodologías y estándares de pruebas de seguridad OSSTMM Ostmm (Metodología de prueba de código abierto) Esta metodología se relaciona con la seguridad operativa. Se basa en el conocimiento y la medición de las operaciones de seguridad empresarial. Con la ayuda del método OSSTMM, las auditorías de seguridad pueden obtener una comprensión más profunda de cómo se conectan las cosas. Esta metodología está dividida en 4 grupos clave: El alcance: Se define un proceso que recolecta de información en todos los activos dentro de la infraestructura. El canal: Nos determina el tipo de comunicación e interacción que habrá con los bienes los cuales pueden ser físicos, espectros y comunicativos. Todos estos canales representan un único set de los componentes de seguridad y deben ser testados y verificados durante el período de evaluación. El índice: Clasifica bienes objetivo que se corresponde con sus particulares identificaciones como la dirección MAC o la dirección IP. El vector: Se concluye en qué dirección puede el perito informático evaluar y analizar cada bien funcional. OWASP El OWASP (Open Web Application Security Project) Es una técnica de auditoría web de seguridad abierta y colaborativa que se centra en el análisis de seguridad de las aplicaciones web y se utiliza como referencia para las auditorías de seguridad. Todas las auditorías de seguridad web se basan en los métodos de auditoría de OWASP para analizar y evaluar los riesgos. NIST El NIST (National Institute of Standards and Technology) varía los manuales de seguridad informática que difieren de otros manuales de seguridad de la información. En cierto modo, NIST ofrece pautas más específicas intrínsecas a las pruebas de penetración para mejorar la ciberseguridad general de una organización. Este Marco, también conocido como Cibersecurity Framework, está compuesto por tres partes: El núcleo Los niveles de implementación Los perfiles del Marco PTES El PTES (Penetration Testing Methodologies and Standards) recomienda un enfoque estructurado para una prueba de penetración. Por un lado, el PTES te guía a través de las fases de las pruebas de penetración, comenzando con las fases de comunicación, recopilación de información y modelado de amenazas. Por otro lado, los hackers éticos se familiarizan con los procesos de la organización. Esto también ayuda a identificar las áreas más vulnerables que son propensas a los ataques. PTES proporciona pautas posteriores a la explotación a los pentester. Si es necesario, pueden validar la corrección exitosa de vulnerabilidades previamente identificadas. El estándar tiene siete fases que garantizan pruebas de penetración exitosas con recomendaciones en las que confiar. ISSAF El ISSAF (Information System Security Assessment Framework) es un enfoque especializado y estructurado para las pruebas de penetración. Más importante aún, el framework proporciona metodologías avanzadas que están personalizadas para el contexto. Estos estándares le permiten al pentester planificar y ejecutar cada paso del proceso de prueba de penetración. Por lo tanto, satisface todos los requisitos del proceso de prueba de penetración. Como hacker ético, si estás utilizando diferentes herramientas, ISSAF es un framework crucial. Por ejemplo, vincula cada paso a una herramienta específica y, por lo tanto, reduce la complejidad. ISSAF ofrece información adicional sobre varios vectores de ataque, así como el resultado de la vulnerabilidad después de la explotación. Toda esta información permite a los evaluadores planificar un ataque avanzado que garantiza beneficios al tiempo que protege los sistemas de los ataques cibernéticos. 4.2.- Fases de una prueba de seguridadUna prueba de penetración ( también conocida como pentest), se lleva acabo bajo una metodología que permite identificar las vulnerabilidades que afectan el sistema o aplicación (o aquello que se audite), mediante la explotación controlada de estas, con el fin de entregar un reporte que ayude a remediar y mejorar la seguridad de la información.En esta sección, aprenderemos sobre las pruebas de penetración y lo que implican. Reconocimiento: La fase de recolección de información o mejor conocida como reconocimiento,se basa el la recopilación de información sobre el sistema o infraestructura a auditar. El objetivo es recolectar un cantidad inmensa de datos, la cual sera utilizada posteriormente. Búsqueda de vulnerabilidades: Un escaneo de vulnerabilidades es una práctica de seguridad que escanea un sistema en busca de vulnerabilidades potenciales que puedan ser utilizadas por un atacante. Explotación: La fase de explotación es el proceso de atacar al objetivo. Esta fase consta de varios pasos que se centran realizar una explotación a los serviciós del objetivo, para lograr la ejecución de código arbitrario y obtener privilegios en el sistema. Post-Explotación: La post explotación es una fase del proceso de pruebas de penetración, la cual se realiza una vez que se logra obtener un acceso mediante la explotación, en esta fase se realiza con el fin de obtener un mayor privilegio al obtenido anteriormente. Reporte: Tras la finalización de las fases, se realiza un entregable en el cual se muestra lo realizado, ademas de los descubrimiento o vulnerabilidades detectadas. 4.3.- Caja blanca, Caja negra y Caja grisCaja negra (“Black Box”): se basan en que los pentesters no disponen de conocimiento previo acerca de la infraestructura que va a ser probada. Es el tipo de test de intrusión más parecido a un ataque real. Suele ser realizado por personal especializado externo a las organizaciones.Caja blanca (“White Box”): se trata del test más completo ya que se parte de un conocimiento completo previo de la infraestructura a ser probada. Normalmente lo realiza personal interno de las organizaciones o se contrata a alguien externo si la empresa no dispone de personal especializados.Caja gris (“Grey Box”): se parte de un conocimiento parcial previo de la infraestructura objetivo del test. Suele ser el tipo de pentest recomendado cuando se contrata a empresas especializadas." }, { "title": "5.- Conociendo al atacante", "url": "/posts/WPT-Conociendo-al-atacante/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-26 18:00:00 -0600", "snippet": "Dentro del mundo de la ciberseguridad cualquiera puede ser un atacante, realmente no es necesario tener una Ing en sistemas o una carrera a fin. Existen jovenes en un rango de 12 a 15 años que se dedican a hackear por diversion realizando los famosos “Defacement” esto gracias a la gran información y videotutoriales en internet.5.1.- Formas de actuar de un atacanteLos atacantes tienen 3 principales motivaciónes para realizar un hackeo, el primero y más conocido es la “ganancia” siempre buscan tener algo que les pueda beneficiar, esto puede ser tener acceso y crear una botnet, secuestrar el servidor y pedir rescate entre otras. Otro motivo suele ser el “ego”, los atacantes en cuanto mas grande la institución e imposible parezca el poder acceder solo es un reto más para ellos. El tercero suele ser simplemente la curiosidad de saber que puede existir dentro de sus sistemas. Tambien dentro de estas características existen algunas ms complicadas como la venganza de empleados y algunos casos especiales.5.2.- Pensamiento vertical y horizontalA lo largo de la vida las instituciones nos han enseñado a seguir el mismo camino para realizar una actividad, esto se denomina como pensamiento vertical. Su caracteristica principal es el cual se realiza la actividad sin salirse del camino. A diferencia lo que es el pensamiento horizontal trata de abarcar más opciones dentro de la realización de las actividades, probando diferentes métodos de acceso para lograr el objetivo.Una forma de ver esto de una forma más técnica sería al momento de realizar un pentest a : Google.comnormalmente solo nos enfocariamos en “Google.com/*” todo lo que pueda estar dentro. Pero … que sucede cuando sabemos que esta empresa es grande y suele tener mas sistemas como: Youtube Android Waze SnapseedAunque estos sistemas no pertenecen directamente al domino “google.com” el atacante suele añadirlos a su alcance dado que existe la posibilidad de encontrar un acceso a los servicios de google y obtener un mayor acceso.5.3.- Vectores de ataque comunesHasta el momento ya tenemos conocimiento de normalmente como opera un atacante, Malware Keyloggers Ingenieria Social Phishing Spam Ransomware DDOS5.4.- Ataques por capa OSI" }, { "title": "6.- Metricas CVE Y CWE", "url": "/posts/WPT-Metricas-cve-y-cwe/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-25 18:00:00 -0600", "snippet": "6.1 Common Vulnerabilities and ExposuresEs un catálogo de amenazas de seguridad conocidas y las amenazas se dividen en dos categorías: vulnerabilidades y exposiciones.El sitio web de CVE, una vulnerabilidad es un error en el código de software que proporciona a un atacante acceso directo a un sistema o red.*Una exposición, por otro lado, se define como un error en el código o configuración que proporciona a un atacante acceso indirecto a un sistema o red.Dentro de este catálogo existen una serie de métricas establecidas para ponderar una vulnerabilidad, entre ellas se mencionan las siguientes: Disponibilidad Confidencialidad Integridad Alcance Dificultad del ataque Entre otras…Tambien contamos con una calculadora en la internet que nos permite evaluar el nivel de riesgo que puede llegar a tener nuestra vulnerabilidad.6.2.- Common Weakness EnumerationCommon Weakness Enumeration (CWE) es un sistema que clasifica las fallas de seguridad en el software, es decir, las fallas de implementación que pueden generar vulnerabilidades. Este es un proyecto social que crea herramientas para comprender y evitar vulnerabilidades de seguridad.Para más información a detalle puedes consultar el sitio oficial." }, { "title": "7.- Auditoría orientada a entornos web", "url": "/posts/WPT-Auditoria-orientada-a-entornos-Web/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-25 09:22:00 -0600", "snippet": "7.1.- Estándares de desarrollo y sus característicasLos estándares de desarrollo web son las pautas que se utilizan para crear sitios web. Estos estándares han sido desarrollados con el tiempo por muchas personas y organizaciones.Los desarrolladores web pueden usar estos estándares para garantizar que sus sitios web cumplan con las expectativas de los usuarios y visitantes. También se aseguran de que su sitio web sea accesible para todos los usuarios, independientemente de su dispositivo o navegador.Existe una herramienta de pentesting, llamada Web Developer, que ayuda a medir qué tan bien se desarrolla un sitio web con respecto a los estándares de desarrollo web. Puede ser utilizado tanto por desarrolladores como por diseñadores para verificar si han seguido todas las pautas al desarrollar un sitio web.7.1.1.- API RESTUna API de REST, o API de RESTful, es una interfaz de programación de aplicaciones (API o API web) que se ajustan a los límites de la arquitectura REST y permite la interacción con los servicios web de RESTful. El informático Roy Fielding es el creador de la transferencia de estado representacional (REST).7.1.2.- SOAPSOAP es un formato de mensaje XML utilizado en interacciones de servicios web. Los mensajes SOAP habitualmente se envían sobre HTTP o JMS, pero se pueden utilizar otros protocolos. El uso de SOAP en un servicio web específico se describe mediante la definición WSDL.7.2.- Explorando los diferentes tipos de servidores y tecnologíasComo se aprendio en el apartado de fundamentos de sistemas operativos existe una variedad muy amplia de tecnologías, las cuales debemos saber identificar y las características que estas tienen al momento de realizar la explotación.Con el fin de tener un mayor impacto y efectividad antes de comenzar la auditoría es necesario verificar la información obtenida en el reconocimiento sobre las tecnologías para con ello tener bases solidas sobre las vulnerabilidades más comunes y tener mayor efectividad.7.3.- Alcance y proceso de una auditoría WebEl alcance de una auditoría es subjetivo depende de la forma de negocio o contrato establecido, dado que nosotros como auditores no tenemos el conocimiento de que puede llegar a implicar un daño a la continuidad del negocio. Dado esto por entendio esto el alcance es una negociación entre lo descubierto dentro de la etapa del reconocimiento y la negociación con el cliente.7.4.- Metodologías de seguridad orientadas hacia aplicaciones WebEl proyecto Web Security Testing Guide (WSTG) produce el principal recurso de pruebas de ciberseguridad para desarrolladores de aplicaciones web y profesionales de la seguridad.El WSTG es una guía completa para probar la seguridad de las aplicaciones web y los servicios web. Creado por los esfuerzos de colaboración de profesionales de la seguridad cibernética y voluntarios dedicados, el WSTG proporciona un marco de mejores prácticas utilizado por evaluadores de penetración y organizaciones de todo el mundo.7.5.- Fases de una auditoría WebLos siguientes temas a ver a continuación, son parte de las fases de una auditoría web, así como algunas técnicas y herramientas que pueden ser utilizadas.7.5.1.- Reconocimiento Aplicaciones WebDurante la fase de recolección de información o mejor conocido como reconocimiento, se basa en la recopilación de información sobre el sistema o infraestructura a auditar. El objetivo es identificar datos desconocidos o no proporcionados por ejemplo: Direcciones de IP Topología de la red Tecnologías utilizadas Versiones de librerías Dispositivos red y más.Ahora se mostraran las diferentes técnicas para realizar la recopilación de información:7.5.1.1- Análisis de subdominiosLa enumeración de subdominios es el proceso para encontrar subdominios de un objetivo.Para realizar este proceso se puede hacer uso de herramientas de internet como dnsdumpster, RapidDNS entre otras.7.5.1.1.1.- PasivoLa información se obtiene sin interacción directa con el objetivo mediante el uso de técnicas como búsquedas en Internet, rastreo de redes. Algunas de estas técnicas involucran el uso de buscadores o indexadores de contenido.Tecnicas/Herramientas de enumeración de subdominios pasivas7.5.1.1.2.- Certificados SSLUn SSL (Secure Socket Layer) es un certificado digital que autentica un sitio web y habilita una conexión cifrada.7.5.1.1.3.- Dns resolutionEs un servicio que apunta el nombre de dominio a la IP del sitio web para que las personas puedan acceder fácilmente al sitio web a través del nombre de dominio registrado. Una dirección IP es una dirección numérica que identifica un sitio en la red. La resolución de dominio es el proceso de convertir nombres de dominio en direcciones IP.7.5.1.1.4.- BruteforceEsta es una técnica en la que uno toma una larga lista de subdominios populares y les agrega su objetivo y, en función de la respuesta, determina si son válidos o no. Esto es similar al ataque de un diccionario.7.5.1.1.5.- PermutaciónGenerar listas de subdominios mediante permutaciones (subdominios, bitsquat, guiones, repetición, omisión, reemplazo, transposición, adición, intercambio de vocales), para comprobar a través de dns resolution si son subdominios válidos.7.5.1.1.6.- RecursiónEs la realización de diferentes variantes obtenidas de la permutación en la recursión se permite verificar si es correcta la información obtenida.7.5.1.1.7.- Registros dnsLos registros DNS son varias cadenas de caracteres que se utilizan para indicar acciones a un servidor DNS. Estas letras también se conocen como sintaxis DNS.7.5.1.1.8.- Análisis de código fuente &amp;amp; Js scrapingEs la depuración de código con el objetivo de encontrar errores y fallas en el código del sistema.Se utilizan herramientas para examinar los archivos js(javascript) con el fin de obtener información de estos.7.5.1.1.9.- Técnicas de obtención de ipFavicon es la imagen de la aplicación la cual si se convierte a md5 obtendremos un código el cual luego se realiza una búsqueda de ip con el md5 obtenido.7.5.1.2.- Técnicas WebDentro de la fase de reconocimiento se intenta obtener la mayor parte información orientada a la plataforma a auditar, de lo cual destacan, librerías, software de terceros, frameworks, rutas o endpoints. Con el resultado de ello se procede a identificar vulnerabilidades, con las versiones de software detectadas así como el realizar una serie de pruebas controladas o detección de patrones en variables y rutas.7.5.1.2.1.- Waf detectionLa detección de waf es una de las etapas más importantes antes de inicializar con la detección u explotación dentro de nuestra auditoría. Esto se debe a que la protección del WAF nos podríamos meter en un problema al mandar nuestros payload ya que estos serían bloqueados.7.5.1.2.2.- Web vuln scanAl realizar análisis de vulnerabilidades dentro de una plataforma web se basa en la detección de vunerabilidades conocidas o reportadas (CVE), ya sea por vulnerabilidades dentro del framework/librerías utilizadas dentro del desarrollo o las configuraciónes realizadas por los programadores.Existen también algunas herramientas que nos falicitan estas tareas e incluso logran detectar vulnerabilidades que comunmente los especialistas detectan de manera manual mediante el uso de la técnica Fuzzing.7.5.1.2.3.- FuzzingEsta técnica se basa en enviar datos erroneos a formularios, dentro de una aplicación de una forma automatizada o semiautomatizada mediante el uso de diccionarios.Dentro de estos dicciónarios nos encontramos payloads los cuales incluyen, números, letras, caracteres especiales hasta código para generar una falla o comportamiento inesperado dentro del sistema.7.5.1.2.4.- CMS scanCMS son las siglas de Content Management System (Content Management System). un CMS permite crear, organizar, publicar y eliminar contenido de su sitio web.Se utilizan herramientas para escanear la seguridad de sistemas de gestión de contenido (CMS) de una forma automática y detectar vulnerabilidades, malas configuraciónes e incluso la enumeración de usuario.7.5.1.2.5.- Directory enumeraciónEl análisis de directorios/Endpoits es fundamental dentro de la realización de un penstes bajo el entendimiento de que no todo lo que esta dentro de un sistema es completamente visible o se tiene conocimiento de ello, de esta forma descubriendo nuevos caminos a realizar pruebas y fortalecer.7.5.1.2.6.- CrawlerLos crawlers son programas que exploran páginas web.Su objetivo principal es rastrear cada enlace de cada sitio web. Luego guarda una copia de todo lo que ve en los archivos. De esta manera, se crea un enlace único para reunir millones de páginas web que se encuentran en Internet y todo el contenido de cada página web.7.5.1.2.7.- Js análisisEl análisis de JS se basa en una técnica de depuración de código para detectar: fallas lógicas, peticiones e incluso vulnerabilidades. Dentro de estos archivos también podemos detectar Api keys las cuales nos permitan obtener mayor información como Firebase.7.5.1.2.8.- Cors checkCORS o Cross origin resource sharing es una característica fundamental dentro del desarrollo web, esta característica brinda la capacidad de realizar comunicación entre sistemas. Habilitando el acceso o parcial a la aplicacón, eso se ve reflejado dentro del mundo de las Apis y los permisos de acceso. El detalle de esto es el que pude ser una ventaja así como un gran riesgo.Un gran ejemplo de ello solia ser un ataque muy famoso en 2008 - 2010 dentro de Facebook el cual era tan simple como mandar una url maliciosa en la cual dentro del codigo js existiera una petición bien formulada, el alcance que esa falla lograba alcanzar, realizaba un account takeover sin que el usuario realizara nada mas que un solo click.7.5.1.2.9.- Check robots waybackWayback machine es un sitio el cual nos permite regresar años e incluso decadas al pasado, permitiendonos visualizar nuestro objetivo, conocerlo y estudiar la estructura, diseño, programación e incluso viejos archivos. Entre ellos visiatar los Robots los cuales nos brinda información de rutas existentes las cuales no deben ser indexadas por un motor de búsqueda.7.5.1.3.- OsintAntes de realizar un ataque un pentester debe conocer el entorno destino como las características del sistema.Cuanta más información específica encuentre el pentester, mayores serán las posibilidades de identificar la forma más fácil y rápida de tener éxito, los servicios de exploración pueden incluir huellas de Internet para investigar objetivos, monitorear recursos, monitorear personal, procesos, escanear información de red y servicios públicos de ingeniería social como mesas de ayuda.7.5.1.3.1.- Domain info(whois,resistant)Whois se usa a menudo para identificar y encontrar un nombre de dominio específico, también admite la obtención de direcciones IP y sistemas de intranet propietarios. Para obtener un dominio registrado, Whois proporciona información administrativa, como el registro y la información de contacto de la persona u organización que controla el dominio.7.5.1.3.2.- MetadataLos metadatos son información relacionada a un recurso , esta información puede contener datos como la procedencia del archivo, fecha de creación, fecha de modificación, autor, dimensiones, modelo de cámara , coordenadas GPS entre otros, estos brindan información valiosa sobre un objetivo ya que permiten identificar patrones de comportamiento, hábitos, software o tecnología utilizada para la generación de documentos o archivos hasta detalles personales.7.5.1.3.3.- Emails, users, data leaksUna violación de datos es la transferencia no intencional de datos a partir de en una organización a un destinatario externo. Si bien esta puede provocar pérdidas financieras inmediatas a una organización.pwndb es una herramienta empleada para la busqeda de credenciales o datos filtrados en el servicio onion.7.5.1.3.4.- Google dorksEs una técnica que utiliza la búsqueda avanzada de google para la obtención de agujeros de seguridad en la configuracióno en el codigo interno de los sitios web.7.5.1.3.5.- Gihub dorksEs una técnica muy eficaz debido a que con ella se puede encontrar información confidencial de los repositorios de github.7.5.2.- Explotación Aplicaciones Web7.5.2.1- SQL InjectionUna inyección SQL es un recurso en el que se puede encontrar información técnica detallada sobre las diferentes variantes de la vulnerabilidad.En esta vulnerabilidad, el atacante inyectará la declaración sql maliciosa para comprometer la base de datos o el servidor.     M MYSQL S SQL Server P PostgreSQL O Oracle 7.5.2.2- AutenticaciónEs la vulnerabilidad más crítica por acceso a datos confidenciales, el proceso para identificar la elegibilidad del usuario antes de acceder a datos confidenciales. Proceso que verifica que un usuario es quien dice ser. El proceso de verificar que el usuario puede hacer algo.Esta vulnerabilidad se crea porque no protege contra ataques de fuerza bruta. Los flujos lógicos o encriptados no válidos, que un atacante pasa por alto se conocen como “validación rota”. Vulnerabilidad en el inicio de sesión basado en contraseña Vulnerabilidad en la autenticación multifactor Vulnerabilidad en otro mecanismo de autenticación7.5.2.3- Divulgación de informaciónEs la fuga de datos privados o los datos sobre la aplicación o la empresa que no deberían estar disponibles para los usuarios públicos o normales. La información llega a filtrarse cuando no se elimina el contenido interno, mala configuración del sitio web o tecnología utilizada o también el mal diseño y funcionamiento de las aplicaciones.7.5.2.4- Broken Access ControlExiste una vulnerabilidad de control de acceso roto, si los usuarios realizan o acceden a ciertos recursos que no se encuentra permitido acceder. Cuando un usuario obtiene acceso a alguna funcionalidad a la que no debería poder acceder u obtiene acceso a la funcionalidad de administración, se trata de una escalada vertical de privilegios.7.5.2.5- IDORSe produce cuando una aplicación utiliza la entrada proporcionada por el usuario para acceder a los objetos directamente. Se asocia comúnmente con la escalada de privilegios horizontal, pero también puede ocurrir en asociación con la escalada de privilegios vertical.7.5.2.6- Directory TraversalEsta vulnerabilidad también se conoce como path-traversal que incluye datos de aplicaciones, código, credenciales, archivos sensibles del sistema operativo. Si algunos de estos archivos tienen permiso de escritura, permite al atacante modificar el contenido del archivo y tomar el control total del servidor.7.5.2.7- Server-side request Forgery (SSRF)Es una vulnerabilidad de seguridad web que permite a un atacante inducir a la aplicación del lado del servidor a realizar una solicitud HTTP a un dominio arbitrario elegido por el atacante. Provoca que el servidor se conecte al servicio solo interno dentro de la infraestructura de la organización. Podría obligar al servidor a conectarse a un sistema externo arbitrario, para filtrar datos confidenciales, como credenciales de autorización.El impacto común es el acceso no autorizado a los datos dentro de la organización. En alguna situación, podría permitir que el atacante realice RCE.7.5.2.8- XXE InjectionTambién conocido como XXE es una vulnerabilidad de seguridad web que permite a un atacante interferir con el procesamiento de datos XML de una aplicación.Permite al atacante ver archivos en el servidor de aplicaciones e interactuar con cualquier sistema de backend al que tenga acceso la propia aplicación. Algunas veces el atacante aprovecha los ataques XXE a SSRF.Tipos de ataque XXE: Explotación XXE para la obtención de archivos: donde una entidad externa determina el contenido del archivo y lo devuelve en la respuesta de la aplicación. Explotación XXE para realizar un ataque SSRF: cuando se identifica una entidad externa en función de la URL del sistema back-end. Explotación ciega fuera de banda XXE Minería de datos: cuando se transfieren datos confidenciales desde un servidor de aplicaciones a un sistema controlado por un atacante. Explotación Blind XXE para recuperar datos a través de mensajes de error: donde un atacante puede desencadenar un mensaje de error de análisis que contiene datos confidenciales. Algunas aplicaciones tienen una función para cargar imágenes en svg xml, por lo que también pueden ser vulnerables a ataques XXE, SSRF y XSS.7.5.2.9- Remote Code ExecutionLa inyección de comandos del sistema operativo también se conoce como inyección de shell o RCE. Esta es una vulnerabilidad que permite a un atacante ejecutar cualquier comando en el sistema y tomar el control total del servidor.Un atacante podría explotar una vulnerabilidad de inyección de comandos del sistema operativo para comprometer otras partes de la infraestructura de alojamiento, explotando las relaciones de confianza para apuntar a otros sistemas de la organización.Esta vulnerabilidad puede presentarse en cualquier parámetro que se pueda proporcionar directamente al shell interno, pero necesitamos un proxy para verificar que puede interactuar con un parámetro oculto o en una solicitud de API. purpose linux windows name of current user ‘whoami’ ‘whoami’ OS ‘uname -a’ ‘ver’ Network configuration ‘ifconfig’or’ipaddr ‘ipconfig/all’ Network Connection ‘nestat -an’ ‘netstat -an’ Running Process ‘ps -ef’ ‘tasklist’ 7.5.2.10- BUSINESS LOGICLas vulnerabilidades de lógica empresarial son flujos que surgen durante el diseño y la implementación de aplicaciones que permiten que un atacante provoque un comportamiento inesperado. Esto podría permitir potencialmente a los atacantes manipular la funcionalidad legítima para lograr objetivos maliciosos. Los errores de lógica a menudo son invisibles para aquellos que no los buscan explícitamente, porque generalmente no están expuestos a través del uso normal de la aplicación. RiesgosLas vulnerabilidades de la lógica de negocio a menudo surgen porque los equipos de diseño y desarrollo hacen suposiciones incorrectas sobre cómo los usuarios interactuarán con la aplicación.. (RESUMIR)Es posible que los desarrolladores que trabajan en grandes bases de código no tengan un conocimiento profundo de cómo funcionan todas las áreas de una aplicación. ImpactoEl impacto de las vulnerabilidades de la lógica de negocio depende de la aplicación y de qué lógica o área de la aplicación se rompe. 7.5.2.11 CSRF Cross Site Request For forgeryEs una vulnerabilidad de seguridad web que permite a un atacante inducir a la aplicación del lado del servidor a realizar una solicitud HTTP a un dominio arbitrario elegido por el atacante. Provoca que el servidor se conecte al servicio solo interno dentro de la infraestructura de la organización. Podría obligar al servidor a conectarse a un sistema externo arbitrario, para filtrar datos confidenciales, como credenciales de autorización. El impacto común es el acceso no autorizado a los datos dentro de la organización. En alguna situación, podría permitir que el atacante realice RCE.7.5.2.12 WebSocketsLos sockets web se utilizan para todo tipo de propósitos, incluida la realización user action, Transmitting sensitive. Son ampliamente utilizados en aplicaciones web modernas, se iniciaron a través de HTTP y proporcionan conexiones de larga duración con comunicación asíncrona en ambas direcciones.Prácticamente cualquier vulnerabilidad de seguridad web que surja con HTTP regular también puede surgir en relación con WebSockets communication.7.5.2.13- Cross Site ScriptingEs una vulnerabilidad de seguridad web que permite a un atacante comprometer las interacciones de los usuarios con una aplicación vulnerable.Tipos de XSS Reflected XSS: Surge cuando una aplicación recibe datos en una solicitud HTTP e incluye datos dentro de la respuesta inmediata de forma insegura. Stored XSS: Surgen cuando una aplicación recibe datos de una fuente que no es de confianza e incluye edatos en su respuesta HTTP de una manera no segura. DOM-Based XSS: Surge cuando una aplicación contiene JavaScript del lado del cliente que procesa datos de una fuente que no es de confianza de una manera no segura, generalmente escribiendo los datos nuevamente en el DOM.7.5.2.14- DOM (Document Object Model)El modelo de objeto de documento es una representación jerárquica de elementos de página de un navegador web. Las páginas web pueden usar JavaScript para manipular nodos y objetos DOM y sus propiedades. La manipulación del DOM en sí misma no es un problema. De hecho, es una parte integral de cómo funcionan los sitios web modernos. Sin embargo, JavaScript maneja datos inseguros que pueden desencadenar una variedad de ataques. Las vulnerabilidades basadas en DOM surgen cuando una página web que contiene JavaScript toma un valor controlable por el atacante, llamado fuente, y lo pasa a una función maliciosa, llamada sink.7.5.2.15- Click jackingEl Clickjacking, también conocido como “ataque de reparación de la interfaz de usuario”, ocurre cuando un atacante usa múltiples capas de transparencias o no transparentes para engañar al usuario para que haga clic en un botón o enlace en otra página cuando tiene la intención de hacer clic en la página de nivel superior. De este modo, el atacante “secuestra” los clics destinados a su sitio y los dirige a otra página, probablemente propiedad de otra aplicación, otro dominio o ambos. Usando una técnica similar, los ataques también pueden ser desviados. Con una cuidadosa combinación de hojas de estilo, iframes y cuadros de texto, se puede engañar a los usuarios haciéndoles creer que están ingresando su dirección de correo electrónico o la contraseña de su cuenta bancaria, pero en cambio, golpean un marco invisible controlado por el atacante.7.5.2.16- CORSLa compartición de recursos de origen cruzado es un mecanismo del navegador, que permite el acceso controlado a recursos situados fuera de un determinado dominio.Amplía y añade flexibilidad a la política del mismo origen (SOP). También proporciona un potencial para los ataques basados en dominios cruzados. Si la política de cors de los sitios web está mal configurada o implementada, no protege contra los ataques de origen cruzado como CSRF.7.5.2.17- O-AuthLa serialización es el proceso de convertir una estructura de datos compleja, como los objetos y su campo, aun formato más plano que pueda ser enviado y recibido como un flujo secuencial de bytes. Enviar datos complejos, por ejemplo, a través de una red, entre diferentes componentes de una aplicación, o en una llamada a la API. Cuando se serializa un objeto también se persiste su estado, en otras palabras, los atributos del objeto se conservan junto con sus valores asignados.7.5.2.18- Insecure DeserealizationMuchos ataques de deserialización se completan antes de que la deserialización haya terminado. Esto significa que el propio proceso de deserialización puede iniciar el ataque, incluso si la propia funcionalidad de la aplicación no interactúa directamente con el objeto malicioso.El impacto de una deserealizacion insegura puede ser grave, ya que proporciona un punto de entrada a una superficie de ataque enormemente aumentada. Permite a los atacantes reutilizar el código de la aplicación existente de manera perjudicial, lo que genera muchas otras vulnerabilidades, a menudo RCE (Ejecución remota de código).7.5.2.19- HTTP Request SmugglingEl contrabando de solicitudes HTTP es una técnica para interferir con la forma en que un sitio web procesa la secuencia de solicitudes HTTP que se reciben de uno o más usuarios.Esta vulnerabilidad es de naturaleza crítica, lo que permite a un atacante eludir los controles de seguridad, obtener acceso no autorizado a datos confidenciales y comprometer directamente otra aplicación.7.5.2.20- Web Cache PoisoningEl envenenamiento de la caché web es una técnica avanzada en la que un atacante explota el comportamiento del servidor web y para enviar una respuesta HTTP maliciosa a otros usuarios.En primer lugar, un atacante debe descubrir cómo obtener una respuesta de backend, sin darse cuenta, contiene algún tipo de carga útil maliciosa.Una vez que el primer paso es exitoso, deben asegurarse de que su respuesta se almacene en caché y luego se entregue a la víctima prevista.El caché web infectado puede ser una forma devastadora de lanzar una variedad de ataques que explotan vulnerabilidades como XSS, inyección de JavaScript, redireccionamientos abiertos y más.7.5.2.21- Server Side Template InjectionSSTI ocurre cuando un atacante puede usar la sintaxis nativa del modelo para inyectar una carga útil maliciosa en un modelo, que se ejecuta en el lado del servidor.Ocurre cuando la entrada del usuario se concatena directamente en una plantilla, en lugar de pasarla como datos, lo que permite que un atacante introduzca directivas de plantilla arbitrarias para manipular el motor de plantilla, lo que a menudo les permite tener un control total sobre el servidor. El impacto de SSTI expone a los sitios web a varios ataques dependiendo del motor de plantilla, en algunos casos esta vulnerabilidad no representa un riesgo de seguridad real, pero la mayor parte del impacto de SSTI es muy catastrófico en la fase crítica de la escala un atacante puede llegar al RCE, tomar el control total del servidor. En el caso de que la ejecución remota de código no sea posible, el atacante puede usar un servidor modelo en paralelo como base para muchos otros ataques, obteniendo potencialmente acceso de lectura a datos confidenciales y archivos arbitrarios en el servidor.7.5.2.22- Web Cache PoisoningEl envenenamiento de la caché web es una técnica avanzada en la que un atacante explota el comportamiento del servidor web y para enviar una respuesta HTTP maliciosa a otros usuarios.En primer lugar, un atacante debe descubrir cómo obtener una respuesta de backend, sin darse cuenta, contiene algún tipo de carga útil maliciosa.Una vez que el primer paso es exitoso, deben asegurarse de que su respuesta se almacene en caché y luego se entregue a la víctima prevista.El caché web infectado puede ser una forma devastadora de lanzar una variedad de ataques que explotan vulnerabilidades como XSS, inyección de JavaScript, redireccionamientos abiertos y más.7.5.2.23- Attacking GraphQLSSTI ocurre cuando un atacante puede usar la sintaxis nativa del modelo para inyectar una carga útil maliciosa en un modelo, que se ejecuta en el lado del servidor.Ocurre cuando la entrada del usuario se concatena directamente en una plantilla, en lugar de pasarla como datos, lo que permite que un atacante introduzca directivas de plantilla arbitrarias para manipular el motor de plantilla, lo que a menudo les permite tener un control total sobre el servidor. El impacto de SSTI expone a los sitios web a varios ataques dependiendo del motor de plantilla, en algunos casos esta vulnerabilidad no representa un riesgo de seguridad real, pero la mayor parte del impacto de SSTI es muy catastrófico en la fase crítica de la escala un atacante puede llegar al RCE, tomar el control total del servidor. En el caso de que la ejecución remota de código no sea posible, el atacante puede usar un servidor modelo en paralelo como base para muchos otros ataques, obteniendo potencialmente acceso de lectura a datos confidenciales y archivos arbitrarios en el servidor.7.5.3- Post Explotación Aplicaciones WebInformation gatheringSe trata de recopilar la mayor cantidad de información posible sobre el sistema de destino para que podamos definir una estrategia y un plan de acción que se utilizará en los próximos pasos. Algunas cosas interesantes sobre el sistema de destino pueden ser las siguientes:• Sistema Operativo del Objetivo y el nivel de parche aplicado• Características de Hardware del objetivo y determinar si se encuentra ejecutándose sobre una máquina virtual o no.• Listado de Usuarios registrados en el sistema y cuales se encuentran logueados actualmente.• Listado de Procesos en Ejecución• Programas instalados en la maquina objetivo y frecuencia de uso• Tiempo de Actividad/Inactividad del Sistema objetivo.• Dependiendo del sistema operativo instalado en el objetivo, verificación de ficheros de configuración en busca de posibles vulnerabilidades para seguir explotando.• Listado de variables de entorno en el sistema.• Obtención de los hashes correspondientes a los passwords de los usuarios del sistema.• Determinar si se tiene acceso a otras máquinas en el segmento de red y si existen directorios compartidos.Privilege EscalationEl informe de privilegios se usa para obtener una cuenta de usuario que tiene todos los privilegios habilitados en el sistema, por lo que tendremos más opciones cuando cambiemos la máquina infectada para que sea controlada por otra máquina, controlar la capa de red y finalmente cortar la red.PersistenciaSon técnicas utilizadas por los atacantes para mantener el acceso cuando ingresan al sistema, ya sea reiniciando el sistema sin importar que este infectado , modificando sus credenciales o realizando acciones maliciosas, otras acciones pueden interrumpir la conexión entre el atacante y la víctima." }, { "title": "8.- Mantener el anonimato y reducir tiempos", "url": "/posts/WPT-Mantener-el-anonimato-y-reducir-tiempos/", "categories": "Seguridad, Web", "tags": "Seguridad, Web", "date": "2021-12-25 09:22:00 -0600", "snippet": "ProxysUn servidor proxy es una tecnología que se utiliza como puente entre un origen (ordenador) y un destino (Internet). Por lo general, se trata de dispositivos intermedios, como un ordenador, con los que indirectamente podemos conectarnos a Internet.Cuando se utiliza un servidor proxy, toda la información pasa primero por él, este logra enviarla a su destino e impide cualquier comunicación directa entre nuestra computadora de destino e Internet (o cualquier otra computadora).existen diferetes sitios en internet lo cuales nos ayudan a obtener proxys.hidemy.namefree-proxy.czfree-proxy-list.nettipos de proxyHay muchos servidores proxy disponibles.Aunque realizan esta tarea de diferentes maneras para adaptarse a sus necesidades específicas.TransparenteLos proxies transparentes,Le dice al servidor web que es un proxy y comunica su dirección IP real, revelando así su identidad al servidor web. Los proxies transparentes no se utilizan por motivos de seguridad o privacidad.Distorcionadores:este tipo de proxy brinda una ip falsaal servidor, aunque se identifica como proxy,la ip falsa proporciona anonimato pero la gan ventaja de estos es que puenden confundir al ssrvidor we con la ubiacion.Anonimos:los proxys anonimos ocultan la direccion ip a las paginas we que sena visitadas, esto prevee el robo de identudad y permite la navegacion anonima sin embargo estos se identifan como servidores proxys y algunas podrian negar su acceso.GAAran anonimatoUn proxy de gran anonimato utiliza la direccion ip pero este tipo de proxy cambiará periódicamente la dirección IP que comunica a los servidores web de las páginas que visite. Esto dificulta que las páginas web usen técnicas de seguimiento en línea para espiar su actividad de navegación.VPNVPN o red privada virtual es la forma más fácil y conveniente para que los usuarios aseguren su acceso a Internet y mantengan su privacidad en línea. Cuando se conecta a un servidor VPN seguro, su tráfico de Internet pasa por una fuente encriptada que nadie, incluidos los piratas informáticos, los gobiernos y los ISP, puede ver en su interior.Red TORLa red Tor permite navegar por Internet sin miedo a que te roben o compartan tus datos,gracias a su sistema de encriptación a todos los niveles y al uso del protocolo SOCKS.A través de la red Tor no sera posible rastrear la información enviada entre ordenadores y servidores." }, { "title": "9.- Creación de reportes", "url": "/posts/WPT-Creacion-de-reportes/", "categories": "Seguridad, Técnicas, Web", "tags": "Seguridad, Web", "date": "2021-12-22 18:00:00 -0600", "snippet": "9.1.- Tipos de reporteReporte ejecutivoLos informes ejecutivos son los documentos que sirven de introducción a los inversores. Es importante hacer esto de la mejor manera posible.Reporte técnicoUn informe técnico es un documento escrito u oral que contiene un análisis de un tema específico. El informe técnico tiene como finalidad solucionar o mejorar un problema, que suele estar relacionado con el desempeño de la empresa.9.2.- Manejo de evidenciasAl realizar un reporte es necesario tomar evidencia en el sistema que se auditando la evidencia puede ser código, capturas de como esta el sistema o aplicación, esto se realiza con el fin de tener pruebas de como estaba el sistema o aplicacion.9.3.- El uso del happy pathLa terminología de happy path hace referencia a la forma en como surge una vulnerabilidad detallada paso a paso. Con el motivo o enfoque de brindar no solo como un atacante descubre la vulnerabilidad, si no tambien demostrar que tan lejos un atacante pude llegar con el uso de estas." }, { "title": "Técnicas y herramientas de análisis web", "url": "/posts/WPT-Tecnicas-y-herramientas-de-an%C3%A1lisis-web/", "categories": "Seguridad, Web, Herramientas Web", "tags": "Seguridad, Web, Herramientas Web", "date": "2021-12-21 10:00:00 -0600", "snippet": "Desntro del contenido de este post se exploraran algunas tecniacas y herramientas, las cuales nos facilitaran y apoyaran a la realización de una auditoria de seguridad en la fase de reconocimiento de información web.7.5.1.2.- Técnicas WebDentro de la fase de reconocimiento se intenta obtener la mayor parte información orientada a la plataforma a auditar, de lo cual destacan, librerías, software de terceros, frameworks, rutas o endpoints. Con el resultado de ello se procede a identificar vulnerabilidades, con las versiones de software detectadas así como el realizar una serie de pruebas controladas o detección de patrones en variables y rutas.7.5.1.2.1.- Waf detectionwafw00f es una herramienta utilizada para verificar si extste un firewall para las aplicaciones web, entre los clientes y el sitio web. root㉿kali)-[~]└─$ wafw00f https://tpx.mx/ ______ / \\ ( Woof! ) \\ ____/ ) ,, ) (_ .-. - _______ ( |__| ()``; |==|_______) .)|__| / (&#39; /|\\ ( |__| ( / ) / | \\ . |__| \\(_)_)) / | \\ |__| ~ WAFW00F : v2.1.0 ~ The Web Application Firewall Fingerprinting Toolkit [*] Checking https://tpx.mx/[+] The site https://tpx.mx/ is behind Cloudflare (Cloudflare Inc.) WAF.[~] Number of requests: 2Fuzzing.7.5.1.2.3.- FuzzingEsta técnica se basa en enviar datos erroneos a formularios, dentro de una aplicación de una forma automatizada o semiautomatizada mediante el uso de diccionarios.Dentro de estos dicciónarios nos encontramos payloads los cuales incluyen, números, letras, caracteres especiales hasta código para generar una falla o comportamiento inesperado dentro del sistema.PortSwigger Burp SuiteBurp Suite Professional, de PortSwigger, es el conjunto de herramientas de prueba de seguridad web líder en el mundo, con herramientas manuales y automatizadas diseñadas por expertos, puede probar de manera más inteligente, no más difícil.7.5.1.2.4.- CMS scanwpscan(root㉿kali)-[]└─$ wpscan --url https://tpx.mx/ --disable-tls-checks --random-user-agent 4 ⨯_______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.20 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart_______________________________________________________________[+] URL: https://tpx.mx/ [104.21.25.37][+] Started: Wed Mar 2 15:14:42 20227.5.1.2.5.- Directory enumeracióngobuster┌──(root㉿kali)-[~]└─$ sudo gobuster dir -u https://tpx.mx/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,asp===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: https://tpx.mx/[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,php,html,asp[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/02 15:56:33 Starting gobuster in directory enumeration mode7.5.1.2.6.- CrawlerLos crawlers son programas que exploran páginas web.Su objetivo principal es rastrear cada enlace de cada sitio web. Luego guarda una copia de todo lo que ve en los archivos. De esta manera, se crea un enlace único para reunir millones de páginas web que se encuentran en Internet y todo el contenido de cada página web.7.5.1.2.7.- Js análisisEl análisis de JS se basa en una técnica de depuración de código para detectar: fallas lógicas, peticiones e incluso vulnerabilidades. Dentro de estos archivos también podemos detectar Api keys las cuales nos permitan obtener mayor información como Firebase.visual studio codeVisual Studio Code es un editor de código actualizado y mejorado para la creacion y la depuración de aplicaciones web y en la nube. Este editor es gratis, el caul se puede desacragar en el seiguiente link.https://code.visualstudio.com/7.5.1.2.8.- Cors checkCORS o Cross origin resource sharing es una característica fundamental dentro del desarrollo web, esta característica brinda la capacidad de realizar comunicación entre sistemas. Habilitando el acceso o parcial a la aplicacón, eso se ve reflejado dentro del mundo de las Apis y los permisos de acceso. El detalle de esto es el que pude ser una ventaja así como un gran riesgo.Un gran ejemplo de ello solia ser un ataque muy famoso en 2008 - 2010 dentro de Facebook el cual era tan simple como mandar una url maliciosa en la cual dentro del codigo js existiera una petición bien formulada, el alcance que esa falla lograba alcanzar, realizaba un account takeover sin que el usuario realizara nada mas que un solo click.MY_URL=http://tpx.mxcurl -I -X OPTIONS \\ -H &quot;Origin: ${MY_URL}&quot; \\ -H &#39;Access-Control-Request-Method: GET&#39; \\ &quot;${MY_URL}/SOMETHING&quot; 2&amp;gt;&amp;amp;1 | grep -i &#39;Access-Control-Allow-Origin&#39;7.5.1.2.9.- Check robots wayback:)Wayback machine es un sitio el cual nos permite regresar años e incluso decadas al pasado, permitiendonos visualizar nuestro objetivo, conocerlo y estudiar la estructura, diseño, programación e incluso viejos archivos. Entre ellos visiatar los Robots los cuales nos brinda información de rutas existentes las cuales no deben ser indexadas por un motor de búsqueda.Buscar Robots.txt:Wayback Machine muestra casi todo lo que encuentra en el sitio, incluido el archivo robots.txt. Esto es bueno porque si su sitio tiene un problema tecnico o de rastreo, se puede averiguar la fecha o una aproximacion de cuándo se realizaron los cambios que causaron los problemas en robots.txt." }, { "title": "Técnicas y herramientas de análisis web", "url": "/posts/WPT-Herramientas-de-tecnicas-web/", "categories": "Seguridad, Web, Herramientas Web", "tags": "Seguridad, Web, Herramientas Web", "date": "2021-12-21 10:00:00 -0600", "snippet": "7.5.1.2.- Técnicas WebDentro de la fase de reconocimiento se intenta obtener la mayor parte información orientada a la plataforma a auditar, de lo cual destacan, librerías, software de terceros, frameworks, rutas o endpoints. Con el resultado de ello se procede a identificar vulnerabilidades, con las versiones de software detectadas así como el realizar una serie de pruebas controladas o detección de patrones en variables y rutas.7.5.1.2.1.- Waf detectionwafw00f es una herramienta utilizada para verificar si extste un firewall para las aplicaciones web, entre los clientes y el sitio web. root㉿kali)-[~]└─$ wafw00f https://tpx.mx/ ______ / \\ ( Woof! ) \\ ____/ ) ,, ) (_ .-. - _______ ( |__| ()``; |==|_______) .)|__| / (&#39; /|\\ ( |__| ( / ) / | \\ . |__| \\(_)_)) / | \\ |__| ~ WAFW00F : v2.1.0 ~ The Web Application Firewall Fingerprinting Toolkit [*] Checking https://tpx.mx/[+] The site https://tpx.mx/ is behind Cloudflare (Cloudflare Inc.) WAF.[~] Number of requests: 2Fuzzing.7.5.1.2.3.- FuzzingEsta técnica se basa en enviar datos erroneos a formularios, dentro de una aplicación de una forma automatizada o semiautomatizada mediante el uso de diccionarios.Dentro de estos dicciónarios nos encontramos payloads los cuales incluyen, números, letras, caracteres especiales hasta código para generar una falla o comportamiento inesperado dentro del sistema.PortSwigger Burp SuiteBurp Suite Professional, de PortSwigger, es el conjunto de herramientas de prueba de seguridad web líder en el mundo, con herramientas manuales y automatizadas diseñadas por expertos, puede probar de manera más inteligente, no más difícil.7.5.1.2.4.- CMS scanwpscan(root㉿kali)-[]└─$ wpscan --url https://tpx.mx/ --disable-tls-checks --random-user-agent 4 ⨯_______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.20 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart_______________________________________________________________[+] URL: https://tpx.mx/ [104.21.25.37][+] Started: Wed Mar 2 15:14:42 20227.5.1.2.5.- Directory enumeracióngobuster┌──(root㉿kali)-[~]└─$ sudo gobuster dir -u https://tpx.mx/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e -x txt,php,html,asp===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: https://tpx.mx/[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: txt,php,html,asp[+] Expanded: true[+] Timeout: 10s===============================================================2022/03/02 15:56:33 Starting gobuster in directory enumeration mode7.5.1.2.6.- CrawlerLos crawlers son programas que exploran páginas web.Su objetivo principal es rastrear cada enlace de cada sitio web. Luego guarda una copia de todo lo que ve en los archivos. De esta manera, se crea un enlace único para reunir millones de páginas web que se encuentran en Internet y todo el contenido de cada página web.7.5.1.2.7.- Js análisisEl análisis de JS se basa en una técnica de depuración de código para detectar: fallas lógicas, peticiones e incluso vulnerabilidades. Dentro de estos archivos también podemos detectar Api keys las cuales nos permitan obtener mayor información como Firebase.visual studio codeVisual Studio Code es un editor de código actualizado y mejorado para la creacion y la depuración de aplicaciones web y en la nube. Este editor es gratis, el caul se puede desacragar en el seiguiente link.https://code.visualstudio.com/7.5.1.2.8.- Cors checkCORS o Cross origin resource sharing es una característica fundamental dentro del desarrollo web, esta característica brinda la capacidad de realizar comunicación entre sistemas. Habilitando el acceso o parcial a la aplicacón, eso se ve reflejado dentro del mundo de las Apis y los permisos de acceso. El detalle de esto es el que pude ser una ventaja así como un gran riesgo.Un gran ejemplo de ello solia ser un ataque muy famoso en 2008 - 2010 dentro de Facebook el cual era tan simple como mandar una url maliciosa en la cual dentro del codigo js existiera una petición bien formulada, el alcance que esa falla lograba alcanzar, realizaba un account takeover sin que el usuario realizara nada mas que un solo click.MY_URL=http://tpx.mxcurl -I -X OPTIONS \\ -H &quot;Origin: ${MY_URL}&quot; \\ -H &#39;Access-Control-Request-Method: GET&#39; \\ &quot;${MY_URL}/SOMETHING&quot; 2&amp;gt;&amp;amp;1 | grep -i &#39;Access-Control-Allow-Origin&#39;7.5.1.2.9.- Check robots wayback:)Wayback machine es un sitio el cual nos permite regresar años e incluso decadas al pasado, permitiendonos visualizar nuestro objetivo, conocerlo y estudiar la estructura, diseño, programación e incluso viejos archivos. Entre ellos visiatar los Robots los cuales nos brinda información de rutas existentes las cuales no deben ser indexadas por un motor de búsqueda.Buscar Robots.txt:Wayback Machine muestra casi todo lo que encuentra en el sitio, incluido el archivo robots.txt. Esto es bueno porque si su sitio tiene un problema tecnico o de rastreo, se puede averiguar la fecha o una aproximacion de cuándo se realizaron los cambios que causaron los problemas en robots.txt." }, { "title": "Herramientas de análisis de subdominios", "url": "/posts/WPT-Herramientas-de-analisis-de-subdominios/", "categories": "Seguridad, Web, Herramientas Web", "tags": "Seguridad, Web, Herramientas Web", "date": "2021-12-21 10:00:00 -0600", "snippet": "El análisis de subdominios es fundamental dentro la realización de un pentest bajo el entendimiento de que no todo lo que esta dentro de un sistema es completamente visible o se tiene conocimiento de ello dentro de la realización de un pentest, de esta forma se van descubriendo nuevos caminos al realizar pruebas y fortalecer la infraestructura.Análisis pasivoEl análisis pasivo de subdominios, hace uso de varias técnicas, entre una de ellas es la recolección de información indexada dentro de los buscadores mejor conocida como dorks, además algunos de estos sitios realizan sus propios ataques con diccionario para la obtención de subdominios extra. DNS Dumpster: Esta herramienta principalmente nos ofrece información solo de los subdominios indexados dentro de internet, una de las ventajas de este es la característica de interfaz gráfica que nos brinda, nos permite ver un diagrama de la composición del dominio. RapidDNS RapidDNS tiene la propiedad de realizar una serie de búsquedas con diccionarios además de la indexación brindando una lista de subdominios más acercada a la real. Virustotal Virustotal una de las bases de datos de virus más grande del mundo añadio una característica dentro de la funcionabilidad de su sitio la cual nos permite analizar un dominio para detectar malware dentro de el. El cual dentro del análisis realiza tambien una detección dentro de los subdominios. Pentest-tools El sitio pentest-tools consta con una recopilación de las herramientas más importantes durante una auditoría de seguridad, la cual nos facilita el realizar análisis desde la red. Spyse Spyse es una herramienta estilo shodan la cual indexa y realiza análisis a IP, Dominios y Organizaciónes. Este nos permite verificar los dominios activos que logré identificar además de las tecnologías implementadas. DNSLOOKUPDNS LookUp es una herramienta de diagnóstico de DNS y consulta de registros de DNS que permite conocer el estado de servidores DNS y registros de DNS. Análisis ActivoGobusterEsta herramienta nos brinda la capacidad de enumerar mediante fuerza bruta, dentro de las capacidades de este nos permite enumerar subdominios y directorios de una manera bastante rápida dado su opción de uso de hilos. root@tpx.mx:$ gobuster dns -d tpx.mx -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart) =============================================================== [+] Domain: tpx.mx [+] Threads: 10 [+] Timeout: 1s [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt =============================================================== 2022/02/28 14:17:12 Starting gobuster in DNS enumeration mode =============================================================== Found: info.tpx.mx Found: i.tpx.mx Found: www.tpx.mx Found: c.tpx.mx Found: u.tpx.mx Found: form.tpx.mx Found: status.tpx.mx Found: gifs.tpx.mx =============================================================== 2022/02/28 14:17:19 Finished =============================================================== KnockpyKnockpy es una herramienta hecha en python3 diseñada para enumerar rápidamente subdominios en dominio objetivo a través de un ataque con diccionario. root@tpx.mx:$ git clone https://github.com/guelfoweb/knock.git root@tpx.mx:$ cd knock root@tpx.mx:$ pip3 install -r requirements.txt root@tpx.mx:$ python3 knockpy.py tpx.mxAmass (OWASP®)El proyecto de OWASP Amass realiza un mapeo de la red mediante ataques sobre la red y descubrimiento externo de activos con el uso de técnicas Open Source Information Gathering y reconocimiento activo. root@tpx.mx:$ sudo snap install amass root@tpx.mx:$ amass enum -passive -d tpx.mx -srcDNSReconDNSRecon es un script en python que nos permite realizar las siguientes técnicas: Check all NS Records for Zone Transfers. Enumerate General DNS Records for a given Domain (MX, SOA, NS, A, AAAA, SPF and TXT). Perform common SRV Record Enumeration. Top Level Domain (TLD) Expansion. Check for Wildcard Resolution. Brute Force subdomain and host A and AAAA records given a domain and a wordlist. Perform a PTR Record lookup for a given IP Range or CIDR. Check a DNS Server Cached records for A, AAAA and CNAME Records provided a list of host records in a text file to check. Enumerate Hosts and Subdomains using Google root@tpx.mx:$ dnsrecon -d tpx.mx -D /usr/share/wordlists/dnsmap.txt -t std [*] Performing General Enumeration of Domain:tpx.mx [*] DNSSEC is configured for tpx.mx [*] DNSKEYs: [*] None KSk ECDSAP256SHA256 99db2cc14cabdc33d6d77da63a2f15f7 1112584f234e8d1dc428e39e8a4a97e1 aa271a555dc90701e17e2a4c4b6f120b 7c32d44f4ac02bd894cf2d4be7778a19 [*] None ZSK ECDSAP256SHA256 a09311112cf9138818cd2feae970ebbd 4d6a30f6088c25b325a39abbc5cd1197 aa098283e5aaf421177c2aa5d714992a 9957d1bcc18f98cd71f1f1806b65e148 [*] SOA jean.ns.cloudflare.com 173.245.58.121 [*] SOA jean.ns.cloudflare.com 172.64.32.121 [*] Enumerating SRV Records" }, { "title": "Seguridad en la red e infraestructura - Cheat Sheet", "url": "/posts/Seguridad-en-la-red-e-infraestructura/", "categories": "Seguridad", "tags": "Seguridad", "date": "2020-12-30 10:00:00 -0600", "snippet": " 1.- Funcionamiento de las redes 1.1.- Funcionamiento de la Red /modelo OSI a detalle. 1.2.- ¿Qué es un servicio? 1.3.- ¿Qué es un protocolo? 1.4.- ¿Cómo viaja tu información a través de la red? 2.- Equipos dentro de la red 2.1.- Equipos cliente o Nodos 2.1.1.- Descripción y funcionamiento 2.1.2.- Servicios y protocolos comunes 2.1.3.- Vulnerabilidades y ataques más frecuentes 2.2.- Equipos de transmisión 2.2.1.- Descripción y funcionamiento 2.2.2.- Servicios y protocolos comunes 2.2.3.- Vulnerabilidades y ataques más frecuentes 2.3.- Equipos de enrutamiento 2.3.1.- Descripción y funcionamiento 2.3.2.- Servicios y protocolos comunes 2.3.3.- Vulnerabilidades y ataques más frecuentes 2.4.- Equipos de proveedores de servicios 2.4.1.- Descripción y funcionamiento 2.4.2.- Servicios y protocolos comunes 2.4.3.- Vulnerabilidades y ataques más frecuentes 3.- Auditando la Red 3.1.- Descubriendo la topología de la red 3.2.- Identificación de equipos 3.3.- Análisis de vulnerabilidades 3.4.- Auditoria Equipos cliente (nodos) 3.4.1.- Ataques físicos 3.4.1.1.- Bad USB 3.4.1.2.- Rubber Ducky 3.4.1.3.- Bash Bunny 3.4.1.4.- Plunder BUG LAN TAP 3.4.1.5.- Key Croc 3.4.1.6.- Screen Crab 3.4.1.7.- Packet Squirrel 3.4.1.8.- Lan Turtle 3.4.1.9 .- NetHunter (All in one) 3.4.2.- Ataques Inalámbricos 3.4.2.1.- Deauth Network Client 3.4.2.2.- Bypass Hostpot ( Clonado de MAC ) 3.4.2.3.- Hacking bluetooth 3.4.2.4.- Sniffing 3.4.3.- Ataques en el enlace de datos 3.4.3.1.- Spoofing DNS 3.4.3.2.- Spoofing ARP 3.4.4.- Ataque en red 3.4.4.1.- Man in the middle 3.4.5.- Ataque a la capa de presentación 3.4.5.1.- Phishing 3.4.6.- Ataques nivel aplicación 3.4.6.1 Exploits 3.5.- Auditoria Equipos de transmisión 3.5.1.- Ataques Inalámbricos (Routers y Módems WIFI) 3.5.1.1.- DOS Deauth attack 3.5.1.2.- Sniffing 3.5.1.3.- Cracking/Hacking WIFI 3.5.1.4.- WPS Pixie Dust 3.5.1.5.- WPS Bruteforce &amp;amp; common Pins 3.5.1.7.- WEP replay attack 3.5.1.8.- WEP chopchop attack 3.5.1.9.- WEP fragment attack 3.5.1.10.- WEP hirte attack 3.5.1.11.- WEP p0841 attack 3.5.1.12.- WEP caffe-latte attack 3.5.1.13.- WPA/2 Brute-Force Handshake 3.5.1.14.- Evil Twin 3.5.1.15.- Rouge AP 3.4.2.- Ataques en el enlace de datos (SWITCH, HUBS) 3.4.2.1.- Ataques susplantación DHCP 3.4.2.2.- Ataques inanición DHCP 3.4.2.3.- Ataques CDP 3.4.2.4.- Ataques Telnet (Fuerza bruta) 3.4.2.5.- Ataques Denial of Service 3.6.- Equipos de enrutamiento 3.6.1.- Denial of Service 3.6.2.- Brute Force 3.6.3.- Packet mistreating attacks 3.6.4.- Router table poisoning 3.6.5.- Persistent Attacks 3.6.6.- Hit and Run 3.6.7.- Syn Flood 3.6.8.- Routopsy 3.7.- Equipos proveedores de servicios (Servidor) 3.7.1.- Reconocimiento (Enumeración de puertos y servicios) 3.7.1.1.- Nmap y uso de scripts 3.7.2.- Introducción base a servicios web y sus vulnerabilidades 3.7.3.- Explotación de servicios comunes 3.7.3.1.- SMTP 3.7.3.2.- TELNET 3.7.3.3.- FTP 3.7.3.4.- SMB 3.7.3.5.- RPC 3.7.3.6.- POP3 3.7.4.- Explotación de vulnerabilidades 3.7.4.1.- Metasploit 3.7.4.2.- Exploits externos 4.- Perimetrales 4.1.- Firewalls 4.2.- WAF 4.3.- CDN 4.4.- IPS 4.5.- IDS 4.6.- Control de acceso a la identidad 4.7.- Honeypots " }, { "title": "Pentesting Android - Cheat Sheet", "url": "/posts/Pentesting-Android/", "categories": "Seguridad", "tags": "Seguridad", "date": "2019-12-31 09:22:00 -0600", "snippet": "Proximamente" }, { "title": "Ciber Inteligencia", "url": "/posts/Ciber-Inteligencia/", "categories": "Seguridad", "tags": "Seguridad", "date": "2019-12-31 09:22:00 -0600", "snippet": "Esta guia contiene información de temas actuales basados en tecnicas de investigación referentes a inteligencia. 1.- Funciones y usos de las metodologías de inteligencia en ciberseguridad. 1.2.- Cyber Intelligence Specialist. 1.3.- Conocimientos adicionales considerados para las metodologías de inteligencia. 1.4.- Conocimientos que se adquieren con la práctica y tiempo al usar una metodología de Inteligencia. 2.- Aplicación de las metodologías de inteligencia en la actualidad. 2.1.- Tipos de sectores en los que se aplican metodologías de inteligencia. 2.2.- Porque las empresas hacen uso de inteligencia. 3.- Importancia de las metodologías de Inteligencia. 3.1.- Inteligencia pública y privada. 3.2.- Repercusiones legales dentro del país. 3.3.- Repercusiones legales en otros países. 3.4.- En el panorama internacional 4.- SOCMINT 4.1.- ¿Qué es SOCMINT? 4.2.- Historia del SOCMINT. 4.2.1.- Tipos de misiones de SOCMINT. 4.3.- Uso y aplicaciones de SOCMINT. 4.4.- SOCMINT y su ciclo de inteligencia. 4.4.1.- Proceso de toma de decisiones. 4.5.- Herramientas y tecnologías para el uso de SOCMINT. 4.5.1.- Técnicas, métodos, interpretación y generación de informes. 4.6.- SOCMINT en la actualidad y su importancia. 4.7.- Casos de estudio, ejemplos y análisis mediante SOCMINT. 5.- OSINT 5.1.- ¿Qué es OSINT? 5.2.- Historia del OSINT. 5.2.1.- Tipos de misiones de OSINT. 5.3.- Uso y aplicaciones de OSINT. 5.3.1.- Tipos de fuentes de información. 5.3.2.- Categorización de información de fuentes abiertas. 5.4.- OSINT y su ciclo de inteligencia. 5.4.1.- Proceso de toma de decisiones. 5.4.2.- En el ámbito empresarial. 5.4.3.- En el ámbito institucional. 5.4.4.- Tipos de OSINT. 5.5.- Herramientas y tecnologías para el uso de OSINT. 5.5.1.- Protección en el entorno de búsqueda y trabajo. 5.5.2.- Tipos de malware. 5.5.3.- Consejos y buenas prácticas. 5.5.4.- Formas correctas de ciberinvestigaciones. 5.5.4.1.- Investigaciones en Internet, Deep Web, Dark Web. 5.5.1.- Técnicas, métodos, interpretación y generación de informes. 5.6.- OSINT en la actualidad y su importancia. 5.7.- Casos de estudio, ejemplos y análisis mediante OSINT. 6.- CIBERINT 6.1.- ¿Qué es CIBERINT? 6.2.- Historia del CIBERINT. 6.2.1.- Tipos de misiones de CIBERINT. 6.3.- Uso y aplicaciones de CIBERINT. 6.4.- CIBERINT y su ciclo de inteligencia. 6.4.1.- Proceso de toma de decisiones. 6.4.2.- Principales vectores de ataque en el ciberespacio. 6.4.3.- Ciberseguridad para empresas, instituciones, organización u organismos. 6.4.4.- El cibercrimen. 6.4.4.1.- Riesgos y ciberamenazas. Exploits. Malware. Ransomware. Software espía. Rootkit. APT o amenaza avanzada persistente. ATM malware o software malicioso para cajeros. Fraude online. Phishing. Vishing. SPAM. SMIshing. Pharming. Whaling. Hoax. Watering hole. 6.4.4.- Ciberterrorismo. 6.4.5.- Hacktivismo. 6.4.6.- El OSINT en el CIBERINT. 6.4.7.- Tipos de OSINT. 6.4.8.- CIBERINT táctico, operativo, estratégico. 6.4.9.- Sesgos cognitivos. 6.4.10.- Diferencias entre amenazas, riesgo y vulnerabilidad. 6.4.11.- Tipos de redes. 6.5.- Inteligencia de amenazas cibernéticas. 6.5.1.- Inteligencia estratégica. 6.5.2.- Inteligencia operacional. 6.5.3.- Inteligencia táctica. 6.5.4.- Inteligencia de amenazas internas. 6.5.5.- Inteligencia de amenazas externas. 6.5.6.- Indicadores de compromiso IOC. 6.6.- Tecnicas de analisis de CIBERINT. 6.6.1.- Técnicas de análisis estructuradas. 6.6.2.- Taxonomía de técnicas analíticas estructuradas. 6.6.3.- Organización de las técnicas analiticas estructuradas. 6.6.4.- Análisis de redes sociales mediante teoría de juegos y grafos. 6.6.5.- Objetivos de los análisis. 6.7.- Operaciones cibernéticas - Activas y Pasivas. 6.8.- Capacidades operacionales de la dimensión ciberespacial. 6.9.- Ciberseguridad y Ciberdefensa. 6.10.- Pirámide del poder cibernético militar. 6.11.- Operaciones de información. 6.12.- Metodologías para pruebas de ciberseguridad OSSTMM - Open Source Security Testing Methodology Manual. ISSAF - Information Systems Security Assesment. OWASP - Open Web Application Security Projects. WASC-TC - Web Application Security Consortium ThreatClassification: NIST: National Institute of Standards and Technology. PTES: Penetration Testing Methodologies and Standards. ISSAF: Information System Security Assessment Framework. Cyber kill chain. MITRE ATT&amp;amp;CK. Diamond Model. 6.13.- Certificaciones de ciberseguridad 2020. 6.14.- Áreas profesionales de la ciberseguridad - 50 top áreas. 6.15- Herramientas y tecnologías para el uso de CIBERINT. 6.15.1.- Técnicas, métodos, interpretación y generación de informes. 6.16.- CIBERINT en la actualidad y su importancia. 6.17- Casos de estudio, ejemplos y análisis mediante CIBERINT. 7.- IMINT 7.1.- ¿Qué es IMINT? 7.2.- Historia del IMINT. 7.2.1.- Tipos de misiones de IMINT. Misiones de vigilancia. 7.2.2.- Vigilancia persistente de un área extensa. 7.2.3.- Vigilancia persistente alrededor de un área de una base o sede propia. 7.2.4.- Vigilancia de instalaciones. 7.2.5.- Vigilancia de fronteras y puestos de control. 7.2.6.- Vigilancia y control de zonas establecidas. 7.2.7.- IMINT para el control de movimiento de personas desplazadas. 7.2.8.- Supervisar áreas seguras. Misiones de reconocimiento. 7.2.9.- Reconocimiento de un área - industrial, militar, seguridad. 7.2.10.- Reconocimiento de área para apoyo en misión. 7.2.11.- Reconocimiento para indicar e identificar información sobre rutas y vehículos. 7.2.12.- Reconocimiento para control de multitudes. 7.2.13.- Reconocimiento para detección, localización, apoyo y rescate. Misiones de cartografía. 7.2.14.- Cartografía digital del terreno. 7.2.15.- Cartografía de rutas de evacuación de personas y vehículos. 7.2.16.- Cartografía de áreas costeras. 7.2.17.- Cartografía de la infraestructura de transporte. 7.3.- Uso y aplicaciones de IMINT. 7.4.- IMINT y su ciclo de inteligencia. 7.4.1.- Proceso de toma de decisiones. 7.5.- Herramientas y tecnologías para el uso de IMINT. Teledetección. Sensores de IMINT. Plataformas para IMINT. Obtención de información y recursos para IMINT. 7.5.1.- Técnicas, métodos, interpretación y generación de informes. Procesamiento de imágenes. IMINT y sus interpretaciones cuantitativas o métricas. Técnicas de análisis de imágenes. Interpretación, métodos y ayuda. Imágenes satelitales. 7.6.- Ventajas del IMINT en la toma de decisiones y sus aplicaciones. 7.6.1.- IMINT en gobierno y política exterior. 7.6.2.- IMINT en operaciones de defensa. 7.6.3.- IMINT soporte y consulta para cuerpos de seguridad. 7.6.4.- IMINT en infraestructura y sectores económicos. 7.6.5.- IMINT en puertos y aeropuertos. 7.6.6.- IMINT en análisis, protección de instalaciones y plantas nucleares. 7.6.7.- IMINT para defensa y conflictos. 7.6.8.- IMINT en ciberseguridad y ciberdefensa. 7.7.- IMINT en la actualidad y su importancia. 7.8.- Casos de estudio, ejemplos y análisis mediante IMINT. 8.- TECHINT 8.1.- ¿Qué es TECHINT? 8.2.- Historia del TECHINT. 8.2.1.- Tipos de misiones de TECHINT. 8.3.- Uso y aplicaciones de TECHINT. 8.4.- TECHINT y su ciclo de inteligencia. 8.4.1.- Proceso de toma de decisiones. 8.4.2.- Organización de tareas. 8.4.3.- Asignación de tareas. 8.4.4.- Ciclo de operaciones de TECHINT. 8.4.5.- Centro de explotación de material capturado. 8.4.6.- Función y misión del centro de explotación de material capturado. 8.4.7.- Responsabilidades. 8.4.8.- Concepto de operaciones CMEC. 8.4.9.- CIBERINT, IMINT y TECHINT 8.4.10.- Ventajas de TECHINT. 8.5.- Herramientas y tecnologías para el uso de TECHINT. 8.5.1.- Técnicas, métodos, interpretación y generación de informes. Informes de inteligencia técnica - TECHINT. Operaciones y procedimientos de TECHINT. 8.6.- TECHINT en la actualidad y su importancia. 8.7.- Casos de estudio, ejemplos y análisis mediante TECHINT. 9.- MEDINT 9.1.- ¿Qué es MEDINT? 9.2.- Historia del MEDINT. 9.2.1.- Tipos de misiones de MEDINT. 9.3.- Uso y aplicaciones de MEDINT. 9.4.- MEDINT y su ciclo de inteligencia. 9.4.1.- Proceso de toma de decisiones. 9.4.2.- Niveles de MEDINT. 9.4.3.- Principios de MEDINT. 9.5.- Herramientas y tecnologías para el uso de MEDINT. 9.5.1.- Técnicas, métodos, interpretación y generación de informes. 9.5.2.- Fuentes de inteligencia. 9.5.3.- IPB sanitario. 9.5.4.- Epidemiología, alertas geográficas. 9.5.5.- Terrorismo biológico. 9.5.6.- Amenazas químicas y radiológicas. 9.6.- MEDINT en la actualidad y su importancia. 9.7.- Casos de estudio, ejemplos y análisis mediante MEDINT. 10.- GEOINT 10.1.- ¿Qué es GEOINT? 10.2.- Historia del GEOINT. 10.2.1.- Tipos de misiones de GEOINT. 10.3.- Uso y aplicaciones de GEOINT. 10.4.- GEOINT y su ciclo de inteligencia. 10.4.1.- Proceso de toma de decisiones. 10.4.2.- Componentes de GEOINT. 10.5.- Herramientas y tecnologías para el uso de GEOINT. 10.5.1.- Plataformas. 10.5.2.- Información geoespacial. 10.5.3.- Análisis avanzados, elevación, interacción, actividad. 10.5.4.- Productos y aplicaciones. 10.5.5.- Áreas de GEOINT y comerciales. 10.5.6.- Técnicas, métodos, interpretación y generación de informes. 10.6.- GEOINT en la actualidad y su importancia. 10.6.1.- GEOINT y gobierno. 10.7.- Casos de estudio, ejemplos y análisis mediante GEOINT. 11.- HUMINT 11.1.- ¿Qué es HUMINT? 11.2.- Historia del HUMINT. 11.2.1.- Tipos de misiones de HUMINT. 11.3.- Uso y aplicaciones de HUMINT. 11.4.- HUMINT y su ciclo de inteligencia. 11.4.1.- Proceso de toma de decisiones. 11.4.2.- Fuentes de información. 11.4.3.- Vigilancia. 11.4.4.- Reconocimiento de inteligencia. 11.4.5.- Motivación del HUMINT. 11.5.- Herramientas y tecnologías para el uso de HUMINT. 11.5.1.- Técnicas, métodos, interpretación y generación de informes. 11.5.2.- Interrogatorio. 11.5.3.- Screening. 11.5.4.- Entrevista. 11.6.- HUMINT en la actualidad y su importancia. 11.7.- Casos de estudio, ejemplos y análisis mediante HUMINT. 12.- MASINT 12.1.- ¿Qué es MASINT? 12.2.- Historia del MASINT. 12.2.1.- Tipos de misiones de MASINT. 12.3.- Uso y aplicaciones de MASINT. 12.4.- MASINT y su ciclo de inteligencia. 12.4.1.- Proceso de toma de decisiones. 12.4.2.- Radares - RADINT. 12.4.3.- Acústica - ACOUSTING. 12.4.4.- Nuclear - NUCINT. 12.4.5.- Radiofrecuencia y pulsos electromagnéticos - RF/EMPINT. 12.4.6.- Electro-óptica - ELECTRO-OPTINT. 12.4.7.- Laser - LASINT. 12.4.8.- Materiales. 12.4.9.- Quimicas y biologicas CBINT. 12.4.10.- Energía de dispositivos. 12.4.11.- Desechos. 12.4.12.- Espectroscópicas. 12.4.13.- Infrarrojas - IRINT. 12.5.- Herramientas y tecnologías para el uso de MASINT. 12.5.1.- Técnicas, métodos, interpretación y generación de informes. 12.6.- MASINT en la actualidad y su importancia. 12.7.- Casos de estudio, ejemplos y análisis mediante MASINT. 13.- ACINT 13.1.- ¿Qué es ACINT? 13.2.- Historia del ACINT. 13.2.1.- Tipos de misiones de ACINT. 13.3.- Uso y aplicaciones de ACINT. 13.4.- ACINT y su ciclo de inteligencia. 13.4.1.- Proceso de toma de decisiones. 13.5.- Herramientas y tecnologías para el uso de ACINT. 13.5.1.- Técnicas, métodos, interpretación y generación de informes. 13.6.- ACINT en la actualidad y su importancia. 13.7.- Casos de estudio, ejemplos y análisis mediante ACINT. 14.- RADINT 14.1.- ¿Qué es RADINT? 14.2.- Historia del RADINT. 14.2.1.- Tipos de misiones de RADINT. 14.3.- Uso y aplicaciones de RADINT. 14.4.- RADINT y su ciclo de inteligencia. 14.4.1.- Proceso de toma de decisiones. 14.5.- Herramientas y tecnologías para el uso de RADINT. 14.5.1.- Técnicas, métodos, interpretación y generación de informes. 14.6.- RADINT en la actualidad y su importancia. 14.7.- Casos de estudio, ejemplos y análisis mediante RADINT. 15.- SIGINT 15.1.- ¿Qué es SIGINT? 15.2.- Historia del SIGINT. 15.2.1.- Tipos de misiones de SIGINT. 15.3.- Uso y aplicaciones de SIGINT. 15.4.- SIGINT y su ciclo de inteligencia. 15.4.1.- Proceso de toma de decisiones. 15.4.2.- Mercado de SIGINT. 15.4.3.- Oportunidades, Amenazas, Regulaciones. 15.5.- Herramientas y tecnologías para el uso de SIGINT. 15.5.1.- Estaciones de trabajo. 15.5.2.- Antenas y sus tipos. 15.5.3.- Tipos de señales. 15.5.4.- Técnicas, métodos, interpretación y generación de informes. 15.6.- SIGINT en la actualidad y su importancia. 15.7.- Casos de estudio, ejemplos y análisis mediante SIGINT. " } ]
